{"title":"A01：Broken Access Control- OWASP","uid":"fb400dcea9e9daaac55e911af7d74bb5","slug":"OWASP TOP 10 Broken Access Control","date":"2022-05-18T15:27:40.349Z","updated":"2022-06-12T09:09:20.108Z","comments":true,"path":"api/articles/OWASP TOP 10 Broken Access Control.json","keywords":null,"cover":"https://andrewhawkeye.oss-cn-beijing.aliyuncs.com/Blog/owasp/%20A01-Broken%20Access%20Control/access-control.svg","content":"<p>94% 的应用程序测试了某种形式的破坏访问控制，平均发生率为3.81% ，在提供的数据集中出现次数最多，超过318k。其中值得注意的常见缺陷枚举包括: <a href=\"https://cwe.mitre.org/data/definitions/200.html\">CWE-200: Exposure of Sensitive Information to an Unauthorized Actor</a>，<a href=\"https://cwe.mitre.org/data/definitions/201.html\">CWE-201: Insertion of Sensitive Information Into Sent Data</a>，以及<a href=\"https://cwe.mitre.org/data/definitions/352.html\">CWE-352: Cross-Site Request Forgery (CSRF)</a>。</p>\n<p><a href=\"https://www.youtube.com/watch?v=BFQsN0fBuIM\" title=\"OWASP TOP 10 2021 | A01:2021 Broken Access Control\"><img src=\"https://res.cloudinary.com/marcomontalbano/image/upload/v1652893488/video_to_markdown/images/youtube--BFQsN0fBuIM-c05b58ac6eb4c4700831b2b3070cd403.jpg\" alt=\"OWASP TOP 10 2021 | A01:2021 Broken Access Control\"></a>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                </p>\n<h1 id=\"什么是访问控制？\"><a href=\"#什么是访问控制？\" class=\"headerlink\" title=\"什么是访问控制？\"></a>什么是访问控制？</h1><p>访问控制(或授权)是对谁(或什么)可以执行他们所请求的尝试操作或访问资源的约束的应用。在Web应用程序的上下文中，访问控制依赖于身份验证和会话管理：</p>\n<ul>\n<li><strong>身份验证</strong>：识别用户并确认用户</li>\n<li><strong>会话管理</strong>: 识别同一用户正在发出哪些后续HTTP请求。</li>\n<li><strong>访问控制</strong>: 确定是否允许用户执行他们尝试执行的操作。</li>\n</ul>\n<p>访问控制失效是一种常见的安全漏洞，也是常见的严重安全漏洞。访问控制的设计和管理是一个复杂且动态的问题，它将业务、组织和法律约束应用于技术实现中。访问控制设计决策必须由人而不是技术做出。并且出错的可能性很高。</p>\n<p>从用户的角度来看，访问控制可以分为以下几类：</p>\n<p><strong>垂直访问控制(Vertical access controls)</strong><br>垂直访问控制是限制对其他类型用户不可用的敏感功能的访问的机制。</p>\n<p>通过垂直访问控制，不同类型的用户可以访问不同的应用程序功能。例如，管理员可以修改或删除任何用户的帐户，而普通用户无权执行这些操作。垂直访问控制可以是更细粒度的安全模型实施，旨在强制执行业务策略，例如职责分离和最小权限。</p>\n<p><strong>水平访问控制(Horizontal access controls)</strong><br>水平访问控制是一种机制，将资源的访问权限限制在特定允许访问这些资源的用户。</p>\n<p>通过水平访问控制，不同用户可以访问同一类型的资源子集。例如，银行应用程序允许用户查看并从自己的帐户进行支付，但不允许使用其他用户的账户。</p>\n<p><strong>上下文相关的访问控制(Context-dependent access controls)</strong><br>与上下文相关的访问控制根据应用程序的状态或用户与应用程序的交互来限制对功能和资源的访问。</p>\n<p>与上下文相关的访问控制可防止用户以错误的顺序执行操作。例如，零售网站可能会阻止用户在付款后修改订单内容。</p>\n<details class=\"custom-details\">\n<summary> 访问控制安全模型</summary>\n<p><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>访问控制安全模型是一组独立于技术或实现平台的访问控制规则的形式化定义。访问控制安全模型在操作系统、网络、数据库管理和后台、应用程序和Web服务软件中实施。多年来，人们设计了各种访问控制安全模型，使访问控制策略与业务或组织规则和技术变化相匹配。</p></blockquote>\n<p><strong>自主访问控制(Discretionary access control, DAC)</strong><br>是一种根据对象所属的主体(如用户、进程)和&#x2F;或组的身份和需要知道的内容来限制对对象(如文件、数据实体)的访问的方法。</p>\n<p><strong>强制访问控制(Mandatory access control, MAC)</strong><br>是根据系统资源内所载资料的敏感性(以标签表示) ，以及用户获得有关敏感性的资料的正式授权(即获准) ，限制访问系统资源的方法。</p>\n<p><strong>基于角色的访问控制(Role-based access control, RBAC)</strong><br>是一种控制对资源的访问的模型，在这种模型中，资源允许的动作是用角色而不是用单个主题身份来标识的。</p>\n<p><strong>基于属性的访问控制(Attribute Based Access Control, ABAC)</strong><br>根据用户的任意属性和对象的任意属性，以及可能被全局识别并且与手头的策略更相关的环境条件来授予或拒绝用户请求。</p>\n</p>\n</details>\n<h1 id=\"常见的访问控制漏洞\"><a href=\"#常见的访问控制漏洞\" class=\"headerlink\" title=\"常见的访问控制漏洞\"></a>常见的访问控制漏洞</h1><p>访问控制强制执行策略，以使用户不能在其预期权限之外进行操作。漏洞通常会导致未经授权的信息泄露、修改或破坏所有数据或执行超出用户限制的业务功能。常见的访问控制漏洞包括：</p>\n<ul>\n<li>违反最小权限原则，即只应授予特定功能、角色或用户权限，但任何人都能进行使用</li>\n<li>通过修改URL(参数篡改)、内部应用程序状态或HTML页面，或使用修改API请求的攻击工具来绕过访问控制检查</li>\n<li>通过提供其唯一标识符(不安全的直接对象引用)允许查看或编辑其他人的账户</li>\n<li>访问API时缺少对POST、PUT和DELETE的访问控制</li>\n<li>特权升级。在未登录的情况下充当用户或以用户身份登录时冒充管理员</li>\n<li>元数据操作，例如重放或篡改JSON Web Token(JWT)访问控制令牌，或为提升权限或滥用JWT失效而操作的cookie或隐藏字段。</li>\n<li>CORS错误配置允许从未经授权&#x2F;不受信任的来源访问API</li>\n<li>强制以未经身份验证的用户身份浏览经过身份验证的页面或作为标准用户访问特权页面</li>\n</ul>\n<h2 id=\"垂直权限升级\"><a href=\"#垂直权限升级\" class=\"headerlink\" title=\"垂直权限升级\"></a>垂直权限升级</h2><p>如果用户可以访问他们不允许访问的功能，那么这就是垂直权限升级。例如，如果一个非管理用户可以访问管理页面，在那里他们可以删除用户账户，那么这就是垂直权限提升。</p>\n<h3 id=\"不受保护的功能\"><a href=\"#不受保护的功能\" class=\"headerlink\" title=\"不受保护的功能\"></a>不受保护的功能</h3><p>在最基本的情况下，当应用程序没有对敏感功能强制执行任何保护时，就会出现垂直权限提升。例如，可以从管理员的欢迎页面链接管理功能，但不能从用户的欢迎页面链接管理功能。但是，用户可能只需直接浏览相关的管理 URL 就可以访问管理功能。</p>\n<p>例如，一个网站可能会把敏感功能放在以下的 URL 中:</p>\n<pre class=\"line-numbers language-http\" data-language=\"http\"><code class=\"language-http\"><span class=\"token header\"><span class=\"token header-name keyword\">https</span><span class=\"token punctuation\">:</span><span class=\"token header-value\">//insecure-website.com/admin</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>实际上，任何用户都可以访问这个功能，而不仅仅是那些在用户界面中拥有该功能链接的管理用户。在某些情况下，管理 URL 可能会在其他位置公开，比如 robots.txt 文件:</p>\n<pre class=\"line-numbers language-http\" data-language=\"http\"><code class=\"language-http\"><span class=\"token header\"><span class=\"token header-name keyword\">https</span><span class=\"token punctuation\">:</span><span class=\"token header-value\">//insecure-website.com/robots.txt</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>即使 URL 没有在任何地方公开，攻击者也可以使用 wordlist 暴力破解敏感功能的位置。</p>\n<p><a href=\"https://www.youtube.com/watch?v=VJHauKQdtcA&t=30s\" title=\"Unprotected admin functionality\"><img src=\"https://res.cloudinary.com/marcomontalbano/image/upload/v1653579791/video_to_markdown/images/youtube--VJHauKQdtcA-c05b58ac6eb4c4700831b2b3070cd403.jpg\" alt=\"Unprotected admin functionality\"></a>    </p>\n<p>在某些情况下，敏感的功能并没有得到有力的保护，而是通过一个不那么可预测的 URL 来隐藏它: 所谓的晦涩的安全性。仅仅隐藏敏感功能并不能提供有效的访问控制，因为用户仍然可能以各种方式发现模糊的 URL。</p>\n<p>例如，假设一个应用程序通过以下 URL 承载管理功能:</p>\n<pre class=\"line-numbers language-http\" data-language=\"http\"><code class=\"language-http\"><span class=\"token header\"><span class=\"token header-name keyword\">https</span><span class=\"token punctuation\">:</span><span class=\"token header-value\">//insecure-website.com/administrator-panel-yb556</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>攻击者可能无法直接猜测。但是，应用程序仍然可能将 URL 泄露给用户。例如，URL 可能会在基于用户角色构造用户界面的 JavaScript 中公开:</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n<span class=\"token keyword\">var</span> isAdmin <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isAdmin<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token operator\">...</span>\n\t<span class=\"token keyword\">var</span> adminPanelTag <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tadminPanelTag<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://insecure-website.com/administrator-panel-yb556'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tadminPanelTag<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> <span class=\"token string\">'Admin panel'</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token operator\">...</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>如果用户是管理员用户，这个脚本会添加到用户 UI 的链接。但是，包含 URL 的脚本对所有用户都是可见的，无论他们的角色是什么。</p>\n<p><a href=\"https://www.youtube.com/watch?v=mml8SlN2Or4\" title=\"Unprotected admin functionality with unpredictable URL\"><img src=\"https://res.cloudinary.com/marcomontalbano/image/upload/v1653580233/video_to_markdown/images/youtube--mml8SlN2Or4-c05b58ac6eb4c4700831b2b3070cd403.jpg\" alt=\"Unprotected admin functionality with unpredictable URL\"></a></p>\n<h3 id=\"基于参数的访问控制方法\"><a href=\"#基于参数的访问控制方法\" class=\"headerlink\" title=\"基于参数的访问控制方法\"></a>基于参数的访问控制方法</h3><p>有些应用程序在登录时确定用户的访问权限或角色，然后将这些信息存储在用户可控的位置，如隐藏字段、 cookie 或预设查询字符串参数。应用程序根据提交的值做出后续的访问控制决策。例如:</p>\n<pre class=\"line-numbers language-http\" data-language=\"http\"><code class=\"language-http\"><span class=\"token header\"><span class=\"token header-name keyword\">https</span><span class=\"token punctuation\">:</span><span class=\"token header-value\">//insecure-website.com/login/home.jsp?admin=true</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">https</span><span class=\"token punctuation\">:</span><span class=\"token header-value\">//insecure-website.com/login/home.jsp?role=1</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>这种方法从根本上来说是不安全的，因为用户可以简单地修改值并获得对未经授权的功能的访问权，例如管理功能。</p>\n<p><a href=\"https://www.youtube.com/watch?v=L45G5OKhfgI\" title=\"User role controlled by request parameter\"><img src=\"https://res.cloudinary.com/marcomontalbano/image/upload/v1653582077/video_to_markdown/images/youtube--L45G5OKhfgI-c05b58ac6eb4c4700831b2b3070cd403.jpg\" alt=\"User role controlled by request parameter\"></a></p>\n<p><a href=\"https://www.youtube.com/watch?v=4AXJpx7F9YY&t=64s\" title=\"User role can be modified in user profile\"><img src=\"https://res.cloudinary.com/marcomontalbano/image/upload/v1653582156/video_to_markdown/images/youtube--4AXJpx7F9YY-c05b58ac6eb4c4700831b2b3070cd403.jpg\" alt=\"User role can be modified in user profile\"></a></p>\n<h3 id=\"平台错误部署监控控制\"><a href=\"#平台错误部署监控控制\" class=\"headerlink\" title=\"平台错误部署监控控制\"></a>平台错误部署监控控制</h3><p>一些应用程序通过基于用户角色限制对特定 URL 和 HTTP 方法的访问来在平台层实施访问控制。例如，应用程序可能会配置如下规则：</p>\n<pre class=\"line-numbers language-http\" data-language=\"http\"><code class=\"language-http\"><span class=\"token header\"><span class=\"token header-name keyword\">DENY</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">POST, /admin/deleteUser, managers</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>对于 managers 组中的用户，此规则拒绝访问 URL&#x2F;admin&#x2F;deleteUser 上的 POST 方法。在这种情况下，可能会出现各种问题，导致访问控制绕过。</p>\n<p>一些应用程序框架支持各种非标准 HTTP 头，可用于覆盖原始请求中的 URL，例如 x-original-URL 和 x-rewrite-URL。如果一个网站使用严格的前端控制来限制基于 URL 的访问，但是应用程序允许通过请求头覆盖 URL，那么可以使用下面的请求来绕过访问控制:</p>\n<pre class=\"line-numbers language-http\" data-language=\"http\"><code class=\"language-http\"><span class=\"token request-line\"><span class=\"token method property\">POST</span> <span class=\"token request-target url\">/</span> <span class=\"token http-version property\">HTTP/1.1</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">X-Original-URL</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">/admin/deleteUser</span></span>\n...<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<details class=\"custom-details\">\n<summary>URL rewrite vulnerability(URL重写漏洞)</summary>\n<p>对这些标头的支持允许用户通过<strong>X-Original-URL</strong>或<strong>X-Rewrite-URL</strong>HTTP请求标头覆盖请求URL中的路径，并允许用户访问一个URL但让Web应用程序返回一个不同的URL，这可以绕过限制更高级别的缓存和Web服务器。</p>\n</p>\n</details>\n<p><a href=\"https://www.youtube.com/watch?v=Rj0B12Vsh_E&t=1s\" title=\"URL based access control can be circumvented (Video solution)\"><img src=\"https://res.cloudinary.com/marcomontalbano/image/upload/v1654530612/video_to_markdown/images/youtube--Rj0B12Vsh_E-c05b58ac6eb4c4700831b2b3070cd403.jpg\" alt=\"URL based access control can be circumvented (Video solution)\"></a></p>\n<p>另一种攻击可能与请求中使用的HTTP方法有关。上面的前端控件根据URL和HTTP方法限制访问。某些网站在执行操作时可以容忍替代的HTTP请求方法。如果攻击者可以使用GET(或其他)方法对受限URL执行操作，那么他们可以绕过在平台层实现的访问控制。</p>\n<p><a href=\"https://www.youtube.com/watch?v=H_xREdOq1yk&t=243s\" title=\"Method based access control can be circumvented (Video solution)\"><img src=\"https://res.cloudinary.com/marcomontalbano/image/upload/v1654532793/video_to_markdown/images/youtube--H_xREdOq1yk-c05b58ac6eb4c4700831b2b3070cd403.jpg\" alt=\"Method based access control can be circumvented (Video solution)\"></a></p>\n<h2 id=\"水平权限升级\"><a href=\"#水平权限升级\" class=\"headerlink\" title=\"水平权限升级\"></a>水平权限升级</h2><p>当用户能够访问属于另一个用户的资源而不是他们自己的该类型资源时，就会出现水平权限提升。例如，如果一个员工应该只能访问自己的就业和工资记录，但实际上也可以访问其他员工的记录，那么这就是横向权限升级。</p>\n<p>水平提权攻击可能使用与垂直提权类似的利用方法。例如，用户通常可以使用如下URL访问他们自己的帐户页面：</p>\n<pre class=\"line-numbers language-http\" data-language=\"http\"><code class=\"language-http\"><span class=\"token header\"><span class=\"token header-name keyword\">https</span><span class=\"token punctuation\">:</span><span class=\"token header-value\">//insecure-website.com/myaccount?id=123</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>现在，如果攻击者将id参数值修改为另一个用户的参数值，那么攻击者可能会访问另一个用户的帐户页面，以及相关的数据和功能。<br><a href=\"https://www.youtube.com/watch?v=pv5PfMbe_7k\" title=\"User ID controlled by request parameter (Video solution)\"><img src=\"https://res.cloudinary.com/marcomontalbano/image/upload/v1654786945/video_to_markdown/images/youtube--pv5PfMbe_7k-c05b58ac6eb4c4700831b2b3070cd403.jpg\" alt=\"User ID controlled by request parameter (Video solution)\"></a></p>\n<p>在某些应用中，可利用参数没有可预测的值。例如，应用程序可能使用全局唯一标识符 (GUID) 来标识用户，而不是递增数字。在这里，攻击者可能无法猜测或预测另一个用户的标识符。但是，属于其他用户的 GUID 可能会在引用用户的应用程序的其他地方公开，例如用户消息或评论。</p>\n<p><a href=\"https://www.youtube.com/watch?v=KMM4VkXVdjw\" title=\"User ID controlled by request parameter, with unpredictable user IDs\"><img src=\"https://res.cloudinary.com/marcomontalbano/image/upload/v1654787068/video_to_markdown/images/youtube--KMM4VkXVdjw-c05b58ac6eb4c4700831b2b3070cd403.jpg\" alt=\"User ID controlled by request parameter, with unpredictable user IDs\"></a></p>\n<p>在某些情况下，应用程序确实会检测到何时不允许用户访问资源，并返回重定向到登录页面。但是，包含重定向的响应可能仍然包含属于目标用户的一些敏感数据，因此攻击仍然成功。</p>\n<p><a href=\"https://www.youtube.com/watch?v=nrly0jHYFqM\" title=\"User ID controlled by request parameter with data leakage in redirect (Video solution)\"><img src=\"https://res.cloudinary.com/marcomontalbano/image/upload/v1654787222/video_to_markdown/images/youtube--nrly0jHYFqM-c05b58ac6eb4c4700831b2b3070cd403.jpg\" alt=\"User ID controlled by request parameter with data leakage in redirect (Video solution)\"></a></p>\n<h2 id=\"水平到垂直的权限提升\"><a href=\"#水平到垂直的权限提升\" class=\"headerlink\" title=\"水平到垂直的权限提升\"></a>水平到垂直的权限提升</h2><p>通常情况下，水平权限提升攻击可以变成垂直权限提升，通过危害更高权限的用户。例如，水平升级可能允许攻击者重置或捕获属于另一个用户的密码。如果攻击者以管理用户为目标并破坏了他们的帐户，那么他们可以获得管理访问权限，从而执行垂直权限升级。</p>\n<p>例如，攻击者可能能够使用已经描述的用于水平权限提升的参数篡改技术来访问另一个用户的帐户页面：</p>\n<pre class=\"line-numbers language-http\" data-language=\"http\"><code class=\"language-http\"><span class=\"token header\"><span class=\"token header-name keyword\">https</span><span class=\"token punctuation\">:</span><span class=\"token header-value\">//insecure-website.com/myaccount?id=456</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>如果目标用户是应用程序管理员，那么攻击者将获得对管理帐户页面的访问权限。此页面可能会泄露管理员密码或提供更改密码的方法，或者可能提供对特权功能的直接访问。</p>\n<p><a href=\"https://www.youtube.com/watch?v=erLHrDmf2gE\" title=\"User ID controlled by request parameter with password disclosure (Video solution)\"><img src=\"https://res.cloudinary.com/marcomontalbano/image/upload/v1654787378/video_to_markdown/images/youtube--erLHrDmf2gE-c05b58ac6eb4c4700831b2b3070cd403.jpg\" alt=\"User ID controlled by request parameter with password disclosure (Video solution)\"></a></p>\n<h2 id=\"不安全的直接对象引用\"><a href=\"#不安全的直接对象引用\" class=\"headerlink\" title=\"不安全的直接对象引用\"></a>不安全的直接对象引用</h2><p>不安全的直接对象引用 (Insecure direct object references,IDOR) 是访问控制漏洞的一个子类别。当应用程序使用用户提供的输入直接访问对象并且攻击者可以修改输入以获得未经授权的访问时，就会出现 IDOR。</p>\n<details class=\"custom-details\">\n<summary>IDOR</summary>\n<p><strong>什么时IDOR？</strong><br>不安全的直接对象引用 (IDOR) 是一种访问控制漏洞，当应用程序使用用户提供的输入直接访问对象时会出现这种漏洞。IDOR一词因出现在OWASP 2007 Top 10中而广为人知。然而，这只是可能导致绕过访问控制的许多访问控制实施错误的一个示例。IDOR漏洞最常与水平权限提升相关，但它们也可能与垂直权限提升相关。</p>\n<p><strong>IDOR示例</strong><br>有许多访问控制漏洞的例子，其中用户控制的参数值用于直接访问资源或功能。</p>\n<ul>\n<li><p>直接引用数据库对象的IDOR漏洞</p>\n<pre class=\"line-numbers language-http\" data-language=\"http\"><code class=\"language-http\"><span class=\"token header\"><span class=\"token header-name keyword\">https</span><span class=\"token punctuation\">:</span><span class=\"token header-value\">//insecure-website.com/customer_account?customer_number=132355</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>在这里，客户编号直接用作在后端数据库上执行的查询中的记录索引。如果没有其他控制措施，攻击者可以简单地修改customer_number值，绕过访问控制来查看其他客户的记录。这是导致横向权限提升的 IDOR 漏洞示例。</p>\n<p>攻击者可能能够通过在绕过访问控制的同时将用户更改为具有额外权限的用户来执行水平和垂直权限提升。例如，其他可能性包括攻击者登陆用户帐户页面后利用密码泄漏或修改参数。</p>\n</li>\n<li><p>直接引用静态文件的IDOR漏洞</p>\n<p>当敏感资源位于服务器端文件系统的静态文件中时，通常会出现 IDOR 漏洞。例如，网站可能使用递增的文件名将聊天消息记录保存到磁盘，并允许用户通过访问如下 URL 来检索这些记录：</p>\n<pre class=\"line-numbers language-http\" data-language=\"http\"><code class=\"language-http\"><span class=\"token header\"><span class=\"token header-name keyword\">https</span><span class=\"token punctuation\">:</span><span class=\"token header-value\">//insecure-website.com/static/12144.txt</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>在这种情况下，攻击者可以简单地修改文件名来检索另一个用户创建的脚本，并可能获取用户凭据和其他敏感数据。</p>\n</li>\n</ul>\n\n</details>\n<h2 id=\"多步骤流程中的访问控制漏洞\"><a href=\"#多步骤流程中的访问控制漏洞\" class=\"headerlink\" title=\"多步骤流程中的访问控制漏洞\"></a>多步骤流程中的访问控制漏洞</h2><p>许多网站通过一系列步骤实现重要功能。当需要捕获各种输入或选项时，或者当用户需要在执行操作之前查看和确认详细信息时，通常会执行此操作。例如，更新用户详细信息的管理功能可能涉及以下步骤：</p>\n<ul>\n<li>加载包含特定用户详细信息的表单。</li>\n<li>提交更改。</li>\n<li>查看更改并确认。</li>\n</ul>\n<p>有时，网站会对其中一些步骤实施严格的访问控制，而忽略其他步骤。例如，假设访问控制正确应用于第一步和第二步，但没有应用于第三步。实际上，网站假设用户只有在已经完成了正确控制的第一步后才能到达第 3 步。在这里，攻击者可以通过跳过前两个步骤并直接提交带有所需参数的第三步请求来获得对该功能的未经授权的访问。</p>\n<p><a href=\"https://www.youtube.com/watch?v=PQUqFrsbmRA\" title=\"Multi step process with no access control on one step (Video solution)\"><img src=\"https://res.cloudinary.com/marcomontalbano/image/upload/v1654788096/video_to_markdown/images/youtube--PQUqFrsbmRA-c05b58ac6eb4c4700831b2b3070cd403.jpg\" alt=\"Multi step process with no access control on one step (Video solution)\"></a></p>\n<h2 id=\"基于Referer的访问控制\"><a href=\"#基于Referer的访问控制\" class=\"headerlink\" title=\"基于Referer的访问控制\"></a>基于Referer的访问控制</h2><p>Referer一些网站基于HTTP 请求中提交 的标头进行访问控制。标Referer头通常添加到浏览器的请求中，以指示发起请求的页面。</p>\n<p>例如，假设一个应用程序对位于 的主管理页面强制执行访问控制&#x2F;admin，但对子页面（例如&#x2F;admin&#x2F;deleteUser仅检查Referer标题）执行访问控制。如果Referer标头包含主&#x2F;adminURL，则允许请求。</p>\n<p>在这种情况下，由于Referer攻击者可以完全控制标头，因此他们可以伪造对敏感子页面的直接请求，提供所需的Referer标头，从而获得未经授权的访问。</p>\n<h2 id=\"基于位置的访问控制\"><a href=\"#基于位置的访问控制\" class=\"headerlink\" title=\"基于位置的访问控制\"></a>基于位置的访问控制</h2><p>一些网站根据用户的地理位置对资源实施访问控制。例如，这可以适用于适用州立法或业务限制的银行应用程序或媒体服务。这些访问控制通常可以通过使用网络代理、VPN 或操纵客户端地理定位机制来规避。</p>\n<h1 id=\"相关CWE\"><a href=\"#相关CWE\" class=\"headerlink\" title=\"相关CWE\"></a>相关CWE</h1><h2 id=\"CWE-200-Exposure-of-Sensitive-Information-to-an-Unauthorized-Actor\"><a href=\"#CWE-200-Exposure-of-Sensitive-Information-to-an-Unauthorized-Actor\" class=\"headerlink\" title=\"CWE-200: Exposure of Sensitive Information to an Unauthorized Actor\"></a>CWE-200: Exposure of Sensitive Information to an Unauthorized Actor</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>产品将敏感信息公开给未被明确授权访问该信息的参与者。</p></blockquote>\n<p><strong>示例一：</strong><br>此段代码尝试连接数据库，并打印发生的异常信息。</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">openDbConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//print exception message that includes exception message and configuration file location</span>\n<span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> $e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  echo '<span class=\"token class-name\">Caught</span> exception<span class=\"token operator\">:</span> '<span class=\"token punctuation\">,</span> $e<span class=\"token operator\">-></span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token char\">'\\n'</span><span class=\"token punctuation\">;</span>\n  echo '<span class=\"token class-name\">Check</span> credentials in config file at<span class=\"token operator\">:</span> '<span class=\"token punctuation\">,</span> $<span class=\"token class-name\">Mysql_config_location</span><span class=\"token punctuation\">,</span> <span class=\"token char\">'\\n'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>如果发生异常，打印的消息会公开配置文件的目录位置。攻击者可以使用这个信息定位配置文件。如果文件可以被读取，攻击者就可能会获得访问数据库的凭据。攻击者还可以用恶意文件替换文件，导致应用程序使用任意数据库。</p>\n<p><strong>示例二：</strong><br><code>getUserBankAccount</code>方法使用<code>username, accountNumber</code>从数据库查询银行账户信息。如果再查询的过程中引发<code>SQLException</code>,会创建一条错误信息并输出到日志文件中。</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">BankAccount</span> <span class=\"token function\">getUserBankAccount</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> username<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> accountNumber<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token class-name\">BankAccount</span> userAccount <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\">String</span> query <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isAuthorizedUser</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    query <span class=\"token operator\">=</span> <span class=\"token string\">\"SELECT * FROM accounts WHERE owner = \"</span>\n    <span class=\"token operator\">+</span> username <span class=\"token operator\">+</span> <span class=\"token string\">\" AND accountID = \"</span> <span class=\"token operator\">+</span> accountNumber<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">DatabaseManager</span> dbManager <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DatabaseManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Connection</span> conn <span class=\"token operator\">=</span> dbManager<span class=\"token punctuation\">.</span><span class=\"token function\">getConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Statement</span> stmt <span class=\"token operator\">=</span> conn<span class=\"token punctuation\">.</span><span class=\"token function\">createStatement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">ResultSet</span> queryResult <span class=\"token operator\">=</span> stmt<span class=\"token punctuation\">.</span><span class=\"token function\">executeQuery</span><span class=\"token punctuation\">(</span>query<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    userAccount <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">BankAccount</span><span class=\"token punctuation\">)</span>queryResult<span class=\"token punctuation\">.</span><span class=\"token function\">getObject</span><span class=\"token punctuation\">(</span>accountNumber<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SQLException</span> ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">String</span> logMessage <span class=\"token operator\">=</span> <span class=\"token string\">\"Unable to retrieve account information from database,\\nquery: \"</span> <span class=\"token operator\">+</span> query<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Logger</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLogger</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BankManager</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Level</span><span class=\"token punctuation\">.</span>SEVERE<span class=\"token punctuation\">,</span> logMessage<span class=\"token punctuation\">,</span> ex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> userAccount<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>输出的错误信息包含了数据库查询的信息，其中可能包含有关数据库查询逻辑的敏感信息。在这种情况下，错误消息将暴露数据库中的表名和列名。此信息可能会简化SQL注入等相关的攻击。</p>\n<p><strong>示例三：</strong><br>这段代码存储当前用户的位置信息。</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">locationClient <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LocationClient</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlocationClient<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncurrentUser<span class=\"token punctuation\">.</span><span class=\"token function\">setLocation</span><span class=\"token punctuation\">(</span>locationClient<span class=\"token punctuation\">.</span><span class=\"token function\">getLastLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token class-name\">AlertDialog<span class=\"token punctuation\">.</span>Builder</span> builder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AlertDialog<span class=\"token punctuation\">.</span>Builder</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  builder<span class=\"token punctuation\">.</span><span class=\"token function\">setMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sorry, this application has experienced an error.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\">AlertDialog</span> alert <span class=\"token operator\">=</span> builder<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  alert<span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\">Log</span><span class=\"token punctuation\">.</span><span class=\"token function\">e</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ExampleActivity\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Caught exception: \"</span> <span class=\"token operator\">+</span> e <span class=\"token operator\">+</span> <span class=\"token string\">\" While on User:\"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>当程序遇到异常时，它会将用户对象写入到日志中。因为用户对象包含位置信息，所以用户的位置也会写入日志。</p>\n<h2 id=\"CWE-201：Insertion-of-Sensitive-Information-Into-Sent-Data\"><a href=\"#CWE-201：Insertion-of-Sensitive-Information-Into-Sent-Data\" class=\"headerlink\" title=\"CWE-201：Insertion of Sensitive Information Into Sent Data\"></a>CWE-201：Insertion of Sensitive Information Into Sent Data</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>代码将数据传输到另一个参与者，但是数据的一部分包含该参与者不应该访问的敏感信息。敏感信息可能包括本身敏感的数据（例如凭据或私人消息），或者在进一步利用系统时有用的数据（例如内部文件系统结构）。</p></blockquote>\n<p><strong>示例一：</strong><br>以下是实际的 MySQL 错误语句：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">Warning: mysql_pconnect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>: Access denied <span class=\"token keyword\">for</span> <span class=\"token keyword\">user</span>: <span class=\"token string\">'root@localhost'</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">Using</span> password: N1nj4<span class=\"token punctuation\">)</span> <span class=\"token operator\">in</span> <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span><span class=\"token keyword\">local</span><span class=\"token operator\">/</span>www<span class=\"token operator\">/</span>wi<span class=\"token operator\">-</span><span class=\"token keyword\">data</span><span class=\"token operator\">/</span>includes<span class=\"token operator\">/</span><span class=\"token keyword\">database</span><span class=\"token punctuation\">.</span>inc <span class=\"token keyword\">on</span> line <span class=\"token number\">4</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>该错误清楚地暴露了数据库凭据。</p>\n<h2 id=\"CWE-352：Cross-Site-Request-Forgery-CSRF\"><a href=\"#CWE-352：Cross-Site-Request-Forgery-CSRF\" class=\"headerlink\" title=\"CWE-352：Cross-Site Request Forgery (CSRF)\"></a>CWE-352：Cross-Site Request Forgery (CSRF)</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>跨域资源共享( CORS ) 是网站使用的一种技术，可以使 Web 浏览器放松同源策略，从而实现不同网站之间的跨域通信。</p></blockquote>\n<p><strong>示例一：</strong><br>这个示例是PHP代码试图通过验证提交表单的用户是否拥有有效的会话来保护表单提交过程。这种对策不能阻止 CSRF 攻击，因为攻击者通过用户的 Web 浏览器伪造请求，其中已经存在有效的会话。</p>\n<p>下面的HTML允许用户更新配置文件。</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/url/profile.php<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>post<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>firstname<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>lastname<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Update<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><code>profile.php</code>代码：</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token comment\">// initiate the session in order to validate sessions</span>\n\n<span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//if the session is registered to a valid user then allow update</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span> <span class=\"token function\">session_is_registered</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"username\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"invalid session detected!\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Redirect user to login page</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">exit</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// The user session is valid, so process the request</span>\n\n<span class=\"token comment\">// and update the information</span>\n\n<span class=\"token function\">update_profile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> update_profile <span class=\"token punctuation\">&#123;</span>\n\n<span class=\"token comment\">// read in the data from $POST and send an update</span>\n\n<span class=\"token comment\">// to the database</span>\n<span class=\"token function\">SendUpdateToDatabase</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'email'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"Your profile has been successfully updated.\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>此代码可能看起来受保护，因为它检查的是有效的会话。然而，CSRF 攻击实际上可以从任何标记或 HTML 构造进行，包括图像标记、链接、嵌入或对象标记或其他加载背景图像的属性。然后，攻击者可以托管代码，这些代码会悄悄地更改访问该页面的用户名和电子邮件地址，同时仍然登录到目标 Web 应用程序。该代码可能是一个看起来无害的网页，例如:</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SCRIPT</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token keyword\">function</span> <span class=\"token function\">SendAttack</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  form<span class=\"token punctuation\">.</span>email <span class=\"token operator\">=</span> <span class=\"token string\">\"attacker@example.com\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// send to profile.php</span>\n  form<span class=\"token punctuation\">.</span><span class=\"token function\">submit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SCRIPT</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>BODY</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onload</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token literal-property property\">javascript</span><span class=\"token operator\">:</span><span class=\"token function\">SendAttack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://victim.example.com/profile.php<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>form<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>post<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hidden<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>firstname<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Funny<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hidden<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>lastname<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Joke<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hidden<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>注意表单如何包含隐藏字段，因此当它加载到浏览器中时，用户不会注意到它。因为 SendAttack ()是在主体的 onload 属性中定义的，所以当受害者加载 Web 页面时，它将被自动调用。假设用户已经登录到 victim.example.com ，profile.php 将看到一个有效的用户会话已经建立，然后更新电子邮件地址到攻击者自己的地址。在这个阶段，用户的身份已经暴露，通过此配置文件发送的消息可能被发送到攻击者的地址。</p>\n<h1 id=\"预防措施\"><a href=\"#预防措施\" class=\"headerlink\" title=\"预防措施\"></a>预防措施</h1><p>访问控制仅在受信任的服务器端代码或无服务器API有效，攻击者无法修改访问控制检查或元数据。</p>\n<ul>\n<li>除公共资源外，默认拒绝</li>\n<li>实施一次访问控制机制并在整个应用程序中重复使用它们，包括最大限度地减少CORS地使用</li>\n<li><font style='color:red'>Model access controls should enforce record ownership rather than accepting that the user can create, read, update, or delete any record.</font></li>\n<li>域模型应强制执行独特地应用程序业务限制要求。</li>\n<li>禁用Web服务器目录列表并确保文件元数据(例如，<code>.git</code>)和备份文件不存在于Web根目录中。</li>\n<li>记录访问控制失败，在适当地时候提醒管理员。</li>\n<li>限制API和控制器访问地速率，以最大限度地减少自动化攻击工具地危害</li>\n<li>有状态地会话标识符应该在注销后在服务器上失效。无效地JWT令牌应该是短暂地，以便最大限度地减少攻击者的可利用的时间。对于时间较长的JWT，强烈建议遵循OAuth标准来撤销访问权限。</li>\n</ul>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><ul>\n<li><a href=\"https://owasp.org/www-project-proactive-controls/v3/en/c7-enforce-access-controls\">Enforce Access Controls</a></li>\n<li><a href=\"https://www.acunetix.com/vulnerabilities/web/url-rewrite-vulnerability/\">URL rewrite vulnerability</a></li>\n<li><a href=\"https://icode.best/i/60183640383110\">CWE学习</a></li>\n</ul></blockquote>\n","feature":true,"text":"94% 的应用程序测试了某种形式的破坏访问控制，平均发生率为3.81% ，在提供的数据集中出现次数最多，超过318k。其中值得注意的常见缺陷枚举包括: CWE-200: Exposure of Sensitive Information to an Unauthorized Ac...","link":"","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[{"name":"OWASP","slug":"OWASP","count":1,"path":"api/categories/OWASP.json"}],"tags":[{"name":"Access Control","slug":"Access-Control","count":1,"path":"api/tags/Access-Control.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AF%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6%EF%BC%9F\"><span class=\"toc-text\">什么是访问控制？</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E8%A7%81%E7%9A%84%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6%E6%BC%8F%E6%B4%9E\"><span class=\"toc-text\">常见的访问控制漏洞</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9E%82%E7%9B%B4%E6%9D%83%E9%99%90%E5%8D%87%E7%BA%A7\"><span class=\"toc-text\">垂直权限升级</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%8D%E5%8F%97%E4%BF%9D%E6%8A%A4%E7%9A%84%E5%8A%9F%E8%83%BD\"><span class=\"toc-text\">不受保护的功能</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E4%BA%8E%E5%8F%82%E6%95%B0%E7%9A%84%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">基于参数的访问控制方法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B9%B3%E5%8F%B0%E9%94%99%E8%AF%AF%E9%83%A8%E7%BD%B2%E7%9B%91%E6%8E%A7%E6%8E%A7%E5%88%B6\"><span class=\"toc-text\">平台错误部署监控控制</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B0%B4%E5%B9%B3%E6%9D%83%E9%99%90%E5%8D%87%E7%BA%A7\"><span class=\"toc-text\">水平权限升级</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B0%B4%E5%B9%B3%E5%88%B0%E5%9E%82%E7%9B%B4%E7%9A%84%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87\"><span class=\"toc-text\">水平到垂直的权限提升</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%8D%E5%AE%89%E5%85%A8%E7%9A%84%E7%9B%B4%E6%8E%A5%E5%AF%B9%E8%B1%A1%E5%BC%95%E7%94%A8\"><span class=\"toc-text\">不安全的直接对象引用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A4%9A%E6%AD%A5%E9%AA%A4%E6%B5%81%E7%A8%8B%E4%B8%AD%E7%9A%84%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6%E6%BC%8F%E6%B4%9E\"><span class=\"toc-text\">多步骤流程中的访问控制漏洞</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E4%BA%8EReferer%E7%9A%84%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6\"><span class=\"toc-text\">基于Referer的访问控制</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E4%BA%8E%E4%BD%8D%E7%BD%AE%E7%9A%84%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6\"><span class=\"toc-text\">基于位置的访问控制</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%9B%B8%E5%85%B3CWE\"><span class=\"toc-text\">相关CWE</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#CWE-200-Exposure-of-Sensitive-Information-to-an-Unauthorized-Actor\"><span class=\"toc-text\">CWE-200: Exposure of Sensitive Information to an Unauthorized Actor</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#CWE-201%EF%BC%9AInsertion-of-Sensitive-Information-Into-Sent-Data\"><span class=\"toc-text\">CWE-201：Insertion of Sensitive Information Into Sent Data</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#CWE-352%EF%BC%9ACross-Site-Request-Forgery-CSRF\"><span class=\"toc-text\">CWE-352：Cross-Site Request Forgery (CSRF)</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%A2%84%E9%98%B2%E6%8E%AA%E6%96%BD\"><span class=\"toc-text\">预防措施</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99\"><span class=\"toc-text\">参考资料</span></a></li></ol>","author":{"name":"剑三","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"御剑乘风来 除魔天地间","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"Daily Bugle CTF - TryHackMe.com","uid":"cd9319f3e468505bdda95cc1cab7a47e","slug":"Daily Bugle","date":"2022-04-24T14:12:31.425Z","updated":"2022-04-27T16:38:11.205Z","comments":true,"path":"api/articles/Daily Bugle.json","keywords":null,"cover":"https://andrewhawkeye.oss-cn-beijing.aliyuncs.com/Blog/CTF/tryhackme/dailybugle/images.png","text":"Daily Bugle:通过SQLi入侵Joomla的CMS帐户，破解哈希密码并利用yum提权。 信息收集开启靶机，使用nmap搜集服务信息。 nmap 扫描服务 └─$ sudo nmap 10.10.62.61 -sV -F -T4 -oA dailynugle Starti...","link":"","photos":[],"count_time":{"symbolsCount":"17k","symbolsTime":"16 mins."},"categories":[{"name":"CTF","slug":"CTF","count":6,"path":"api/categories/CTF.json"}],"tags":[{"name":"Linux Privilege Escalation","slug":"Linux-Privilege-Escalation","count":3,"path":"api/tags/Linux-Privilege-Escalation.json"},{"name":"tryhackme","slug":"tryhackme","count":6,"path":"api/tags/tryhackme.json"},{"name":"Joomla CMS","slug":"Joomla-CMS","count":1,"path":"api/tags/Joomla-CMS.json"}],"author":{"name":"剑三","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"御剑乘风来 除魔天地间","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}